{"ast":null,"code":"/*!\n* vue-maplibre-gl v3.0.3\n* (c) 2023 Volker Nauruhn\n* @license MIT\n*/\nvar ve = Object.defineProperty;\nvar he = (e, t, r) => t in e ? ve(e, t, {\n  enumerable: !0,\n  configurable: !0,\n  writable: !0,\n  value: r\n}) : e[t] = r;\nvar L = (e, t, r) => (he(e, typeof t != \"symbol\" ? t + \"\" : t, r), r);\nimport { reactive as ie, defineComponent as p, markRaw as ue, getCurrentInstance as B, shallowRef as oe, ref as G, provide as R, watch as m, toRef as v, onMounted as pe, onBeforeUnmount as P, h as T, unref as te, nextTick as ne, inject as s, createCommentVNode as E, Teleport as me, warn as _, createTextVNode as ce } from \"vue\";\nimport { Map as Se, AttributionControl as be, FullscreenControl as Le, GeolocateControl as Ae, NavigationControl as Re, ScaleControl as Oe, Marker as Ee } from \"maplibre-gl\";\nimport Ie from \"mitt\";\nconst A = Symbol(\"map\"),\n  w = Symbol(\"isLoaded\"),\n  j = Symbol(\"isInitialized\"),\n  M = Symbol(\"componentId\"),\n  N = Symbol(\"sourceId\"),\n  U = Symbol(\"sourceLayerRegistry\"),\n  le = Symbol(\"emitter\");\nfunction vt(e) {\n  return Object.keys(e);\n}\nfunction Y(e) {\n  return Object.keys(e);\n}\nconst d = ie({\n  style: \"https://demotiles.maplibre.org/style.json\",\n  center: Object.freeze([0, 0]),\n  zoom: 1,\n  trackResize: !1\n});\nclass z {\n  static createEventHandler(t, r, o, a) {\n    return (i = {}) => o.emit(a, {\n      type: i.type,\n      map: r,\n      component: t,\n      event: i\n    });\n  }\n}\nL(z, \"MAP_OPTION_KEYS\", [\"antialias\", \"attributionControl\", \"bearing\", \"bearingSnap\", \"bounds\", \"boxZoom\", \"center\", \"clickTolerance\", \"collectResourceTiming\", \"crossSourceCollisions\", \"container\", \"customAttribution\", \"dragPan\", \"dragRotate\", \"doubleClickZoom\", \"hash\", \"fadeDuration\", \"failIfMajorPerformanceCaveat\", \"fitBoundsOptions\", \"interactive\", \"keyboard\", \"locale\", \"localIdeographFontFamily\", \"logoPosition\", \"maxBounds\", \"maxPitch\", \"maxZoom\", \"minPitch\", \"minZoom\", \"preserveDrawingBuffer\", \"pitch\", \"pitchWithRotate\", \"refreshExpiredTiles\", \"renderWorldCopies\", \"scrollZoom\", \"mapStyle\", \"trackResize\", \"transformRequest\", \"touchZoomRotate\", \"touchPitch\", \"zoom\", \"maxTileCacheSize\", \"pixelRatio\", \"cooperativeGestures\"]), L(z, \"MARKER_OPTION_KEYS\", [\"element\", \"offset\", \"anchor\", \"color\", \"draggable\", \"clickTolerance\", \"rotation\", \"rotationAlignment\", \"pitchAlignment\", \"scale\"]), L(z, \"MAP_EVENT_TYPES\", [\"error\", \"load\", \"idle\", \"remove\", \"render\", \"resize\", \"webglcontextlost\", \"webglcontextrestored\", \"dataloading\", \"data\", \"tiledataloading\", \"sourcedataloading\", \"styledataloading\", \"sourcedata\", \"styledata\", \"boxzoomcancel\", \"boxzoomstart\", \"boxzoomend\", \"touchcancel\", \"touchmove\", \"touchend\", \"touchstart\", \"click\", \"contextmenu\", \"dblclick\", \"mousemove\", \"mouseup\", \"mousedown\", \"mouseout\", \"mouseover\", \"movestart\", \"move\", \"moveend\", \"zoomstart\", \"zoom\", \"zoomend\", \"rotatestart\", \"rotate\", \"rotateend\", \"dragstart\", \"drag\", \"dragend\", \"pitchstart\", \"pitch\", \"pitchend\", \"wheel\"]);\nvar Z = /* @__PURE__ */(e => (e.TOP_LEFT = \"top-left\", e.TOP_RIGHT = \"top-right\", e.BOTTOM_LEFT = \"bottom-left\", e.BOTTOM_RIGHT = \"bottom-right\", e))(Z || {});\nconst k = Object.values(Z),\n  X = /* @__PURE__ */new Map(),\n  ge = Symbol(\"default\");\nfunction ht(e = ge) {\n  let t = X.get(e);\n  return t || (t = ie({\n    isLoaded: !1,\n    isMounted: !1,\n    language: null\n  }), X.set(e, t)), t;\n}\nfunction Me(e, t, r = ge) {\n  var a;\n  let o = X.get(r);\n  return o || (o = ie({\n    isLoaded: !1,\n    isMounted: !1,\n    language: null\n  }), X.set(r, o)), o.isLoaded = !1, o.isMounted = !1, o.component = e, o.map = t.value, o.isLoaded = ((a = t.value) == null ? void 0 : a.loaded()) || !1, o;\n}\nfunction Ne(e, t = 250, r = !1) {\n  let o;\n  function a() {\n    const i = arguments,\n      l = () => {\n        o = void 0, r !== !0 && e.apply(this, i);\n      };\n    clearTimeout(o), r === !0 && o === void 0 && e.apply(this, i), o = window.setTimeout(l, t);\n  }\n  return a.cancel = () => {\n    clearTimeout(o);\n  }, a;\n}\nconst fe = {\n  /**\n   * AUTO mode uses the language of the browser\n   */\n  AUTO: \"auto\",\n  /**\n   * STYLE is a custom flag to keep the language of the map as defined into the style.\n   * If STYLE is set in the constructor, then further modification of the language\n   * with `.setLanguage()` is not possible.\n   */\n  STYLE_LOCK: \"style_lock\",\n  /**\n   * Default fallback languages that uses latin charaters\n   */\n  LATIN: \"latin\",\n  /**\n   * Default fallback languages that uses non-latin charaters\n   */\n  NON_LATIN: \"nonlatin\",\n  /**\n   * Labels are in their local language, when available\n   */\n  LOCAL: \"\",\n  ALBANIAN: \"sq\",\n  AMHARIC: \"am\",\n  ARABIC: \"ar\",\n  ARMENIAN: \"hy\",\n  AZERBAIJANI: \"az\",\n  BASQUE: \"eu\",\n  BELORUSSIAN: \"be\",\n  BOSNIAN: \"bs\",\n  BRETON: \"br\",\n  BULGARIAN: \"bg\",\n  CATALAN: \"ca\",\n  CHINESE: \"zh\",\n  CORSICAN: \"co\",\n  CROATIAN: \"hr\",\n  CZECH: \"cs\",\n  DANISH: \"da\",\n  DUTCH: \"nl\",\n  ENGLISH: \"en\",\n  ESPERANTO: \"eo\",\n  ESTONIAN: \"et\",\n  FINNISH: \"fi\",\n  FRENCH: \"fr\",\n  FRISIAN: \"fy\",\n  GEORGIAN: \"ka\",\n  GERMAN: \"de\",\n  GREEK: \"el\",\n  HEBREW: \"he\",\n  HINDI: \"hi\",\n  HUNGARIAN: \"hu\",\n  ICELANDIC: \"is\",\n  INDONESIAN: \"id\",\n  IRISH: \"ga\",\n  ITALIAN: \"it\",\n  JAPANESE: \"ja\",\n  JAPANESE_HIRAGANA: \"ja-Hira\",\n  JAPANESE_KANA: \"ja_kana\",\n  JAPANESE_LATIN: \"ja_rm\",\n  JAPANESE_2018: \"ja-Latn\",\n  KANNADA: \"kn\",\n  KAZAKH: \"kk\",\n  KOREAN: \"ko\",\n  KOREAN_LATIN: \"ko-Latn\",\n  KURDISH: \"ku\",\n  ROMAN_LATIN: \"la\",\n  LATVIAN: \"lv\",\n  LITHUANIAN: \"lt\",\n  LUXEMBOURGISH: \"lb\",\n  MACEDONIAN: \"mk\",\n  MALAYALAM: \"ml\",\n  MALTESE: \"mt\",\n  NORWEGIAN: \"no\",\n  OCCITAN: \"oc\",\n  POLISH: \"pl\",\n  PORTUGUESE: \"pt\",\n  ROMANIAN: \"ro\",\n  ROMANSH: \"rm\",\n  RUSSIAN: \"ru\",\n  SCOTTISH_GAELIC: \"gd\",\n  SERBIAN_CYRILLIC: \"sr\",\n  SERBIAN_LATIN: \"sr-Latn\",\n  SLOVAK: \"sk\",\n  SLOVENE: \"sl\",\n  SPANISH: \"es\",\n  SWEDISH: \"sv\",\n  TAMIL: \"ta\",\n  TELUGU: \"te\",\n  THAI: \"th\",\n  TURKISH: \"tr\",\n  UKRAINIAN: \"uk\",\n  WELSH: \"cy\"\n};\nnew Set(Object.values(fe));\nnew Set(Object.values(fe));\nfunction ae(e, t) {\n  const r = e.getStyle().layers,\n    o = /^\\s*{\\s*name\\s*(:\\s*(\\S*))?\\s*}$/,\n    a = /^\\s*name\\s*(:\\s*(\\S*))?\\s*$/,\n    i = /^\\s*{\\s*name\\s*(:\\s*(\\S*))?\\s*}(\\s*){\\s*name\\s*(:\\s*(\\S*))?\\s*}$/,\n    l = /^(.*)({\\s*name\\s*(:\\s*(\\S*))?\\s*})(.*)$/,\n    y = t ? `name:${t}` : \"name\",\n    c = [\"case\", [\"has\", y], [\"get\", y], [\"get\", \"name\"]];\n  for (let I = 0; I < r.length; I += 1) {\n    const S = r[I],\n      H = S.layout;\n    if (!H || !H[\"text-field\"]) continue;\n    const h = e.getLayoutProperty(S.id, \"text-field\");\n    let C;\n    if (Array.isArray(h) && h.length >= 2 && h[0].trim().toLowerCase() === \"concat\") {\n      const b = h.slice();\n      for (let g = 0; g < h.length; g += 1) {\n        const n = h[g];\n        if ((typeof n == \"string\" || n instanceof String) && o.exec(n.toString())) {\n          b[g] = c;\n          break;\n        } else if (Array.isArray(n) && n.length >= 2 && n[0].trim().toLowerCase() === \"get\" && a.exec(n[1].toString())) {\n          b[g] = c;\n          break;\n        } else if (Array.isArray(n) && n.length === 4 && n[0].trim().toLowerCase() === \"case\") {\n          b[g] = c;\n          break;\n        }\n      }\n      e.setLayoutProperty(S.id, \"text-field\", b);\n    } else if (Array.isArray(h) && h.length >= 2 && h[0].trim().toLowerCase() === \"get\" && a.exec(h[1].toString())) {\n      const b = c;\n      e.setLayoutProperty(S.id, \"text-field\", b);\n    } else if ((typeof h == \"string\" || h instanceof String) && o.exec(h.toString())) {\n      const b = c;\n      e.setLayoutProperty(S.id, \"text-field\", b);\n    } else if (Array.isArray(h) && h.length === 4 && h[0].trim().toLowerCase() === \"case\") {\n      const b = c;\n      e.setLayoutProperty(S.id, \"text-field\", b);\n    } else if ((typeof h == \"string\" || h instanceof String) && (C = i.exec(h.toString())) !== null) {\n      const b = `{${y}}${C[3]}{name${C[4] || \"\"}}`;\n      e.setLayoutProperty(S.id, \"text-field\", b);\n    } else if ((typeof h == \"string\" || h instanceof String) && (C = l.exec(h.toString())) !== null) {\n      const b = `${C[1]}{${y}}${C[5]}`;\n      e.setLayoutProperty(S.id, \"text-field\", b);\n    }\n  }\n}\nconst Ce = /* @__PURE__ */p({\n  name: \"MglMap\",\n  props: {\n    width: {\n      type: [Number, String],\n      default: \"100%\"\n    },\n    height: {\n      type: [Number, String],\n      default: \"100%\"\n    },\n    antialias: {\n      type: Boolean,\n      default: () => d.antialias\n    },\n    attributionControl: {\n      type: Boolean,\n      default: () => d.attributionControl\n    },\n    bearing: {\n      type: Number,\n      default: () => d.bearing\n    },\n    bearingSnap: {\n      type: Number,\n      default: () => d.bearingSnap\n    },\n    bounds: {\n      type: [Array, Object],\n      default: () => d.bounds\n    },\n    boxZoom: {\n      type: Boolean,\n      default: () => d.boxZoom\n    },\n    center: {\n      type: [Array, Object],\n      default: () => d.center\n    },\n    clickTolerance: {\n      type: Number,\n      default: () => d.clickTolerance\n    },\n    collectResourceTiming: {\n      type: Boolean,\n      default: () => d.collectResourceTiming\n    },\n    crossSourceCollisions: {\n      type: Boolean,\n      default: () => d.crossSourceCollisions\n    },\n    customAttribution: {\n      type: [String, Array],\n      default: () => d.customAttribution\n    },\n    dragPan: {\n      type: Boolean,\n      default: () => d.dragPan\n    },\n    dragRotate: {\n      type: Boolean,\n      default: () => d.dragRotate\n    },\n    doubleClickZoom: {\n      type: Boolean,\n      default: () => d.doubleClickZoom\n    },\n    hash: {\n      type: [Boolean, String],\n      default: () => d.hash\n    },\n    fadeDuration: {\n      type: Number,\n      default: () => d.fadeDuration\n    },\n    failIfMajorPerformanceCaveat: {\n      type: Boolean,\n      default: () => d.failIfMajorPerformanceCaveat\n    },\n    fitBoundsOptions: {\n      type: Object,\n      default: () => d.fitBoundsOptions\n    },\n    interactive: {\n      type: Boolean,\n      default: () => d.interactive\n    },\n    keyboard: {\n      type: Boolean,\n      default: () => d.keyboard\n    },\n    locale: {\n      type: Object,\n      default: () => d.locale\n    },\n    language: {\n      type: String,\n      default: () => d.language || null\n    },\n    localIdeographFontFamily: {\n      type: String,\n      default: () => d.localIdeographFontFamily\n    },\n    logoPosition: {\n      type: [String],\n      validator: e => e in Z,\n      default: () => d.logoPosition\n    },\n    maxBounds: {\n      type: [Array, Object],\n      default: () => d.maxBounds\n    },\n    maxPitch: {\n      type: Number,\n      default: () => d.maxPitch\n    },\n    maxZoom: {\n      type: Number,\n      default: () => d.maxZoom\n    },\n    minPitch: {\n      type: Number,\n      default: () => d.minPitch\n    },\n    minZoom: {\n      type: Number,\n      default: () => d.minZoom\n    },\n    preserveDrawingBuffer: {\n      type: Boolean,\n      default: () => d.preserveDrawingBuffer\n    },\n    pitch: {\n      type: Number,\n      default: () => d.pitch\n    },\n    pitchWithRotate: {\n      type: Boolean,\n      default: () => d.pitchWithRotate\n    },\n    refreshExpiredTiles: {\n      type: Boolean,\n      default: () => d.refreshExpiredTiles\n    },\n    renderWorldCopies: {\n      type: Boolean,\n      default: () => d.renderWorldCopies\n    },\n    scrollZoom: {\n      type: Boolean,\n      default: () => d.scrollZoom\n    },\n    // StyleSpecification triggers TS7056, so users must handle typings themselves\n    mapStyle: {\n      type: [String, Object],\n      default: () => d.style\n    },\n    trackResize: {\n      type: Boolean,\n      default: () => d.trackResize\n    },\n    transformRequest: {\n      type: Function,\n      default: d.transformRequest\n    },\n    touchZoomRotate: {\n      type: Boolean,\n      default: () => d.touchZoomRotate\n    },\n    touchPitch: {\n      type: Boolean,\n      default: () => d.touchPitch\n    },\n    zoom: {\n      type: Number,\n      default: () => d.zoom\n    },\n    maxTileCacheSize: {\n      type: Number,\n      default: () => d.maxTileCacheSize\n    },\n    mapKey: {\n      type: [String, Symbol]\n    },\n    pixelRatio: {\n      type: Number,\n      default: () => d.pixelRatio\n    },\n    cooperativeGestures: {\n      type: [Boolean, Object],\n      default: () => d.cooperativeGestures\n    }\n  },\n  emits: [\"map:error\", \"map:load\", \"map:idle\", \"map:remove\", \"map:render\", \"map:resize\", \"map:webglcontextlost\", \"map:webglcontextrestored\", \"map:dataloading\", \"map:data\", \"map:tiledataloading\", \"map:sourcedataloading\", \"map:styledataloading\", \"map:sourcedata\", \"map:styledata\", \"map:boxzoomcancel\", \"map:boxzoomstart\", \"map:boxzoomend\", \"map:touchcancel\", \"map:touchmove\", \"map:touchend\", \"map:touchstart\", \"map:click\", \"map:contextmenu\", \"map:dblclick\", \"map:mousemove\", \"map:mouseup\", \"map:mousedown\", \"map:mouseout\", \"map:mouseover\", \"map:movestart\", \"map:move\", \"map:moveend\", \"map:zoomstart\", \"map:zoom\", \"map:zoomend\", \"map:rotatestart\", \"map:rotate\", \"map:rotateend\", \"map:dragstart\", \"map:drag\", \"map:dragend\", \"map:pitchstart\", \"map:pitch\", \"map:pitchend\", \"map:wheel\"],\n  slots: Object,\n  setup(e, t) {\n    const r = ue(B()),\n      o = oe(),\n      a = oe(),\n      i = G(!1),\n      l = G(!1),\n      y = G(!1),\n      c = /* @__PURE__ */new Map(),\n      I = Ie(),\n      S = Me(r, a, e.mapKey);\n    let H;\n    R(A, a), R(w, l), R(j, i), R(M, r.uid), R(N, \"\"), R(le, I), m(v(e, \"bearing\"), n => {\n      var u;\n      n && ((u = a.value) == null || u.setBearing(n));\n    }), m(v(e, \"bounds\"), n => {\n      var u;\n      n && ((u = a.value) == null || u.fitBounds(n, e.fitBoundsOptions));\n    }), m(v(e, \"center\"), n => {\n      var u;\n      n && ((u = a.value) == null || u.setCenter(n));\n    }), m(v(e, \"maxBounds\"), n => {\n      var u;\n      n && ((u = a.value) == null || u.setMaxBounds(n));\n    }), m(v(e, \"maxPitch\"), n => {\n      var u;\n      n && ((u = a.value) == null || u.setMaxPitch(n));\n    }), m(v(e, \"maxZoom\"), n => {\n      var u;\n      n && ((u = a.value) == null || u.setMaxZoom(n));\n    }), m(v(e, \"minPitch\"), n => {\n      var u;\n      n && ((u = a.value) == null || u.setMinPitch(n));\n    }), m(v(e, \"minZoom\"), n => {\n      var u;\n      n && ((u = a.value) == null || u.setMinZoom(n));\n    }), m(v(e, \"pitch\"), n => {\n      var u;\n      n && ((u = a.value) == null || u.setPitch(n));\n    }), m(v(e, \"renderWorldCopies\"), n => {\n      var u;\n      n && ((u = a.value) == null || u.setRenderWorldCopies(n));\n    }), m(v(e, \"mapStyle\"), n => {\n      var u;\n      n && ((u = a.value) == null || u.setStyle(n));\n    }), m(v(e, \"transformRequest\"), n => {\n      var u;\n      n && ((u = a.value) == null || u.setTransformRequest(n));\n    }), m(v(e, \"zoom\"), n => {\n      var u;\n      n && ((u = a.value) == null || u.setZoom(n));\n    }), m(v(e, \"zoom\"), n => {\n      var u;\n      n && ((u = a.value) == null || u.setZoom(n));\n    }), m(v(e, \"language\"), n => {\n      y.value && a.value && S.language !== (n || null) && (ae(a.value, n || \"\"), S.language = n || null);\n    }), m(v(S, \"language\"), n => {\n      y.value && a.value && ae(a.value, n || \"\");\n    });\n    function h() {\n      y.value = !0, e.language ? S.language = e.language : S.language && ae(a.value, e.language || \"\");\n    }\n    function C() {\n      S.isMounted = !0;\n      const n = Object.keys(e).filter(u => e[u] !== void 0 && z.MAP_OPTION_KEYS.indexOf(u) !== -1).reduce((u, F) => (u[F === \"mapStyle\" ? \"style\" : F] = te(e[F]), u), {\n        container: o.value\n      });\n      if (a.value = ue(new Se(n)), S.map = a.value, i.value = !0, c.set(\"__load\", () => (l.value = !0, S.isLoaded = !0)), a.value.once(\"styledata\", h), a.value.on(\"load\", c.get(\"__load\")), r.vnode.props) {\n        for (let u = 0, F = z.MAP_EVENT_TYPES.length; u < F; u++) if (r.vnode.props[\"onMap:\" + z.MAP_EVENT_TYPES[u]]) {\n          const se = z.createEventHandler(r, a.value, t, \"map:\" + z.MAP_EVENT_TYPES[u]);\n          c.set(z.MAP_EVENT_TYPES[u], se), a.value.on(z.MAP_EVENT_TYPES[u], se);\n        }\n      }\n      a.value.getCanvas().addEventListener(\"webglcontextlost\", g);\n    }\n    async function b() {\n      S.isMounted = !1, S.isLoaded = !1, l.value = !1, a.value && (a.value.getCanvas().removeEventListener(\"webglcontextlost\", g), a.value._controls.forEach(n => {\n        a.value.removeControl(n);\n      }), i.value = !1, c.forEach((n, u) => {\n        a.value.off(u.startsWith(\"__\") ? u.substring(2) : u, n);\n      }), a.value.remove());\n    }\n    function g() {\n      b(), ne(C);\n    }\n    return pe(() => {\n      C(), a.value && (H = new ResizeObserver(Ne(a.value.resize.bind(a.value), 100)), H.observe(o.value));\n    }), P(() => {\n      H !== void 0 && (H.disconnect(), H = void 0), b();\n    }), t.expose({\n      map: a\n    }), () => T(\"div\", {\n      class: \"mgl-container\",\n      style: {\n        height: e.height,\n        width: e.width\n      }\n    }, [T(\"div\", {\n      ref: o,\n      class: \"mgl-wrapper\"\n    }), i.value && t.slots.default ? t.slots.default({}) : void 0]);\n  }\n});\nfunction W(e, t, r) {\n  m(e, o => {\n    var a, i;\n    o && k.indexOf(o) === -1 || ((a = t.value) != null && a.hasControl(r) && t.value.removeControl(r), (i = t.value) == null || i.addControl(r, o));\n  }, {\n    immediate: !0\n  });\n}\nconst xe = /* @__PURE__ */p({\n    name: \"MglAttributionControl\",\n    props: {\n      position: {\n        type: String,\n        validator: e => k.indexOf(e) !== -1\n      },\n      compact: Boolean,\n      customAttribution: [String, Array]\n    },\n    setup(e) {\n      const t = s(A),\n        r = s(j),\n        o = new be({\n          compact: e.compact,\n          customAttribution: e.customAttribution\n        });\n      W(v(e, \"position\"), t, o), P(() => r.value && t.value.removeControl(o));\n    },\n    render() {}\n  }),\n  V = class V {\n    constructor(t, r) {\n      L(this, \"container\");\n      this.isAdded = t, this.container = document.createElement(\"div\"), this.setClasses(r);\n    }\n    getDefaultPosition() {\n      return Z.TOP_LEFT;\n    }\n    onAdd() {\n      return ne(() => this.isAdded.value = !0), this.container;\n    }\n    onRemove() {\n      this.isAdded.value = !1, this.container.remove();\n    }\n    setClasses(t) {\n      t ? (this.container.classList.remove(V.CONTROL_CLASS), this.container.classList.remove(V.CONTROL_GROUP_CLASS)) : (this.container.classList.add(V.CONTROL_CLASS), this.container.classList.add(V.CONTROL_GROUP_CLASS));\n    }\n  };\nL(V, \"CONTROL_CLASS\", \"maplibregl-ctrl\"), L(V, \"CONTROL_GROUP_CLASS\", \"maplibregl-ctrl-group\");\nlet Q = V;\nconst we = /* @__PURE__ */p({\n    name: \"MglCustomControl\",\n    props: {\n      position: {\n        type: String,\n        validator: e => k.indexOf(e) !== -1\n      },\n      noClasses: {\n        type: Boolean,\n        default: !1\n      }\n    },\n    slots: Object,\n    setup(e, {\n      slots: t\n    }) {\n      const r = s(A),\n        o = s(j),\n        a = G(!1),\n        i = new Q(a, e.noClasses);\n      return W(v(e, \"position\"), r, i), m(v(e, \"noClasses\"), l => i.setClasses(l)), P(() => {\n        var l;\n        return o.value && ((l = r.value) == null ? void 0 : l.removeControl(i));\n      }), () => {\n        var l;\n        return a.value ? T(me, {\n          to: i.container\n        }, (l = t.default) == null ? void 0 : l.call(t, {})) : E(\"custom-component\");\n      };\n    }\n  }),\n  Te = /* @__PURE__ */p({\n    name: \"MglFullscreenControl\",\n    props: {\n      position: {\n        type: String,\n        default: Z.TOP_RIGHT,\n        validator: e => k.indexOf(e) !== -1\n      },\n      container: {\n        type: Object,\n        default: null\n      }\n    },\n    setup(e) {\n      const t = s(A),\n        r = s(j),\n        o = new Le({\n          container: e.container || void 0\n        });\n      function a() {\n        ne(() => {\n          var i;\n          return (i = t.value) == null ? void 0 : i.resize();\n        });\n      }\n      o.on(\"fullscreenstart\", a), o.on(\"fullscreenend\", a), W(v(e, \"position\"), t, o), P(() => {\n        var i;\n        o.off(\"fullscreenstart\", a), o.off(\"fullscreenend\", a), r.value && ((i = t.value) == null || i.removeControl(o));\n      });\n    },\n    render() {}\n  });\nclass Pe {\n  constructor(t = \"rgba(0,0,0,0.9)\", r = 4 * window.devicePixelRatio, o = \"#7cf859\", a = \"Monaco, Consolas, Courier, monospace\", i = 60 * window.devicePixelRatio, l = 90 * window.devicePixelRatio, y = 0, c = 5 * window.devicePixelRatio, I = 100 * window.devicePixelRatio) {\n    L(this, \"frames\", 0);\n    L(this, \"totalTime\", 0);\n    L(this, \"totalFrames\", 0);\n    L(this, \"time\", null);\n    L(this, \"map\");\n    L(this, \"container\");\n    L(this, \"readOutput\");\n    L(this, \"canvas\");\n    L(this, \"eventHandlers\", /* @__PURE__ */new Map());\n    this.background = t, this.barWidth = r, this.color = o, this.font = a, this.graphHeight = i, this.graphWidth = l, this.graphTop = y, this.graphRight = c, this.width = I;\n  }\n  getDefaultPosition() {\n    return Z.TOP_RIGHT;\n  }\n  onAdd(t) {\n    this.map = t;\n    const r = this.container = document.createElement(\"div\");\n    return r.className = \"maplibregl-ctrl maplibregl-ctrl-fps\", r.style.backgroundColor = this.background, r.style.borderRadius = \"6px\", this.readOutput = document.createElement(\"div\"), this.readOutput.style.color = this.color, this.readOutput.style.fontFamily = this.font, this.readOutput.style.padding = \"0 5px 5px\", this.readOutput.style.fontSize = \"9px\", this.readOutput.style.fontWeight = \"bold\", this.readOutput.textContent = \"Waiting…\", this.canvas = document.createElement(\"canvas\"), this.canvas.className = \"maplibregl-ctrl-canvas\", this.canvas.width = this.width, this.canvas.height = this.graphHeight, this.canvas.style.cssText = `width: ${this.width / window.devicePixelRatio}px; height: ${this.graphHeight / window.devicePixelRatio}px;`, r.appendChild(this.readOutput), r.appendChild(this.canvas), this.eventHandlers.set(\"movestart\", this.onMoveStart.bind(this)), this.eventHandlers.set(\"moveend\", this.onMoveEnd.bind(this)), this.map.on(\"movestart\", this.eventHandlers.get(\"movestart\")), this.map.on(\"moveend\", this.eventHandlers.get(\"moveend\")), this.container;\n  }\n  onRemove() {\n    this.map.off(\"movestart\", this.eventHandlers.get(\"movestart\")), this.map.off(\"moveend\", this.eventHandlers.get(\"moveend\")), this.eventHandlers.clear(), this.container.parentNode.removeChild(this.container), this.map = void 0;\n  }\n  onMoveStart() {\n    this.frames = 0, this.time = performance.now(), this.eventHandlers.set(\"render\", this.onRender.bind(this)), this.map.on(\"render\", this.eventHandlers.get(\"render\"));\n  }\n  onMoveEnd() {\n    const t = performance.now();\n    this.updateGraph(this.getFPS(t)), this.frames = 0, this.time = null, this.map.off(\"render\", this.eventHandlers.get(\"render\"));\n  }\n  onRender() {\n    if (this.time) {\n      this.frames++;\n      const t = performance.now();\n      t >= this.time + 1e3 && (this.updateGraph(this.getFPS(t)), this.frames = 0, this.time = performance.now());\n    }\n  }\n  getFPS(t) {\n    return this.totalTime += t - this.time, this.totalFrames += this.frames, Math.round(1e3 * this.frames / (t - this.time)) || 0;\n  }\n  updateGraph(t) {\n    const r = this.canvas.getContext(\"2d\"),\n      o = Math.round(1e3 * this.totalFrames / this.totalTime) || 0,\n      a = (this.graphHeight, this.barWidth);\n    r.fillStyle = this.background, r.globalAlpha = 1, r.fillRect(0, 0, this.graphWidth, this.graphTop), r.fillStyle = this.color, this.readOutput.textContent = `${t} FPS (${o} Avg)`, r.drawImage(this.canvas, this.graphRight + a, this.graphTop, this.graphWidth - a, this.graphHeight, this.graphRight, this.graphTop, this.graphWidth - a, this.graphHeight), r.fillRect(this.graphRight + this.graphWidth - a, this.graphTop, a, this.graphHeight), r.fillStyle = this.background, r.globalAlpha = 0.75, r.fillRect(this.graphRight + this.graphWidth - a, this.graphTop, a, (1 - t / 100) * this.graphHeight);\n  }\n}\nconst He = /* @__PURE__ */p({\n    name: \"MglFrameRateControl\",\n    props: {\n      position: {\n        type: String,\n        validator: e => k.indexOf(e) !== -1\n      },\n      background: {\n        type: String,\n        default: \"rgba(0,0,0,0.9)\"\n      },\n      barWidth: {\n        type: Number,\n        default: 4 * window.devicePixelRatio\n      },\n      color: {\n        type: String,\n        default: \"#7cf859\"\n      },\n      font: {\n        type: String,\n        default: \"Monaco, Consolas, Courier, monospace\"\n      },\n      graphHeight: {\n        type: Number,\n        default: 60 * window.devicePixelRatio\n      },\n      graphWidth: {\n        type: Number,\n        default: 90 * window.devicePixelRatio\n      },\n      graphTop: {\n        type: Number,\n        default: 0\n      },\n      graphRight: {\n        type: Number,\n        default: 5 * window.devicePixelRatio\n      },\n      width: {\n        type: Number,\n        default: 100 * window.devicePixelRatio\n      }\n    },\n    setup(e) {\n      const t = s(A),\n        r = s(j),\n        o = new Pe(e.background, e.barWidth, e.color, e.font, e.graphHeight, e.graphWidth, e.graphTop, e.graphRight, e.width);\n      W(v(e, \"position\"), t, o), P(() => {\n        var a;\n        return r.value && ((a = t.value) == null ? void 0 : a.removeControl(o));\n      });\n    },\n    render() {}\n  }),\n  ze = /* @__PURE__ */p({\n    name: \"MglGeolocationControl\",\n    props: {\n      position: {\n        type: String,\n        default: Z.TOP_RIGHT,\n        validator: e => k.indexOf(e) !== -1\n      },\n      positionOptions: {\n        type: Object,\n        default: {\n          enableHighAccuracy: !1,\n          timeout: 6e3\n        }\n      },\n      fitBoundsOptions: {\n        type: Object,\n        default: {\n          maxZoom: 15\n        }\n      },\n      trackUserLocation: {\n        type: Boolean,\n        default: !1\n      },\n      showAccuracyCircle: {\n        type: Boolean,\n        default: !0\n      },\n      showUserLocation: {\n        type: Boolean,\n        default: !0\n      }\n    },\n    setup(e) {\n      const t = s(A),\n        r = s(j),\n        o = new Ae({\n          positionOptions: e.positionOptions,\n          fitBoundsOptions: e.fitBoundsOptions,\n          trackUserLocation: e.trackUserLocation,\n          showAccuracyCircle: e.showAccuracyCircle,\n          showUserLocation: e.showUserLocation\n        });\n      W(v(e, \"position\"), t, o), P(() => {\n        var a;\n        return r.value && ((a = t.value) == null ? void 0 : a.removeControl(o));\n      });\n    },\n    render() {}\n  }),\n  _e = /* @__PURE__ */p({\n    name: \"MglNavigationControl\",\n    props: {\n      position: {\n        type: String,\n        default: Z.TOP_RIGHT,\n        validator: e => k.indexOf(e) !== -1\n      },\n      showCompass: {\n        type: Boolean,\n        default: !0\n      },\n      showZoom: {\n        type: Boolean,\n        default: !0\n      },\n      visualizePitch: Boolean\n    },\n    setup(e) {\n      const t = s(A),\n        r = s(j),\n        o = new Re({\n          showCompass: e.showCompass,\n          showZoom: e.showZoom,\n          visualizePitch: e.visualizePitch\n        });\n      W(v(e, \"position\"), t, o), P(() => {\n        var a;\n        return r.value && ((a = t.value) == null ? void 0 : a.removeControl(o));\n      });\n    },\n    render() {}\n  });\nvar ye = /* @__PURE__ */(e => (e.IMPERIAL = \"imperial\", e.METRIC = \"metric\", e.NAUTICAL = \"nautical\", e))(ye || {});\nconst Be = Object.values(ye),\n  je = /* @__PURE__ */p({\n    name: \"MglScaleControl\",\n    props: {\n      position: {\n        type: String,\n        validator: e => k.indexOf(e) !== -1\n      },\n      maxWidth: {\n        type: Number,\n        default: 100\n      },\n      unit: {\n        type: String,\n        default: \"metric\",\n        validator: e => Be.indexOf(e) !== -1\n      }\n    },\n    setup(e) {\n      const t = s(A),\n        r = s(j),\n        o = new Oe({\n          maxWidth: e.maxWidth,\n          unit: e.unit\n        });\n      W(v(e, \"position\"), t, o), P(() => {\n        var a;\n        return r.value && ((a = t.value) == null ? void 0 : a.removeControl(o));\n      });\n    },\n    render() {}\n  });\nvar ee = /* @__PURE__ */(e => (e.DEFAULT = \"default\", e.TEXT = \"text\", e.MDI = \"mdi\", e.SIMPLE_ICON = \"simple-icons\", e))(ee || {});\nconst ke = Object.values(ee),\n  J = {\n    text: void 0,\n    mdi: {\n      size: 21,\n      viewbox: \"0 0 24 24\"\n    },\n    \"simple-icons\": {\n      size: 21,\n      viewbox: \"0 0 24 24\"\n    },\n    default: {\n      size: 0,\n      viewbox: \"0 0 0 0\"\n    }\n  },\n  re = /* @__PURE__ */p({\n    name: \"MglButton\",\n    props: {\n      type: {\n        type: String,\n        default: \"default\",\n        validator: e => ke.indexOf(e) !== -1\n      },\n      path: {\n        type: String\n      },\n      size: Number,\n      viewbox: String\n    },\n    slots: Object,\n    setup(e, {\n      slots: t\n    }) {\n      !e.path && e.type !== \"text\" && _(\"property `path` must be set on MaplibreButton\");\n      const r = G(J[e.type] || J.default);\n      return m(() => e.type, o => r.value = J[o] || J.default), () => {\n        var o, a;\n        return e.type === \"text\" ? T(\"button\", {\n          type: \"button\"\n        }, (o = t.default) == null ? void 0 : o.call(t, {})) : T(\"button\", {\n          type: \"button\",\n          class: \"maplibregl-ctrl-icon\"\n        }, [T(\"svg\", {\n          width: e.size || r.value.size,\n          height: e.size || r.value.size,\n          viewBox: e.viewbox || r.value.viewbox\n        }, T(\"path\", {\n          fill: \"currentColor\",\n          d: e.path\n        })), (a = t.default) == null ? void 0 : a.call(t, {})]);\n      };\n    }\n  });\nfunction de(e) {\n  return e && !!e.stopPropagation;\n}\nconst De = /* @__PURE__ */p({\n    name: \"MglStyleSwitchControl\",\n    props: {\n      position: {\n        type: String,\n        validator: e => k.indexOf(e) !== -1\n      },\n      mapStyles: {\n        type: Array,\n        required: !0,\n        default: []\n      },\n      modelValue: {\n        type: Object\n      },\n      isOpen: {\n        type: Boolean,\n        default: void 0\n      }\n    },\n    slots: Object,\n    emits: [\"update:modelValue\", \"update:isOpen\"],\n    setup(e, {\n      emit: t,\n      slots: r\n    }) {\n      const o = s(A),\n        a = s(j),\n        i = s(w),\n        l = s(le),\n        y = G(!1),\n        c = G(e.isOpen === void 0 ? !1 : e.isOpen),\n        I = oe(e.modelValue === void 0 ? e.mapStyles.length ? e.mapStyles[0] : null : e.modelValue),\n        S = new Q(y, !1),\n        H = b.bind(null, !1);\n      function h() {\n        const g = o.value.getStyle().name;\n        for (let n = 0, u = e.mapStyles.length; n < u; n++) if (e.mapStyles[n].name === g) {\n          C(e.mapStyles[n]);\n          break;\n        }\n      }\n      m(i, g => {\n        g && h();\n      }, {\n        immediate: !0\n      }), o.value.on(\"style.load\", h), document.addEventListener(\"click\", H), W(v(e, \"position\"), o, S), e.modelValue !== void 0 && m(v(e, \"modelValue\"), g => {\n        g !== void 0 && (I.value = g);\n      }), e.isOpen !== void 0 && m(v(e, \"isOpen\"), g => {\n        g !== void 0 && (c.value = g);\n      }), P(() => {\n        a.value && (o.value.removeControl(S), o.value.off(\"style.load\", h)), document.removeEventListener(\"click\", H);\n      });\n      function C(g) {\n        var n;\n        ((n = I.value) == null ? void 0 : n.name) !== g.name && (l.emit(\"styleSwitched\", g), o.value.setStyle(g.style, {\n          diff: !1\n        }), e.modelValue === void 0 && (I.value = g), t(\"update:modelValue\", g), b(!1));\n      }\n      function b(g, n) {\n        de(n) ? n.stopPropagation() : de(g) && g.stopPropagation(), !(e.isOpen !== void 0 && e.isOpen === g || c.value === g) && (e.isOpen === void 0 ? (c.value = typeof g == \"boolean\" ? g : !c.value, t(\"update:isOpen\", c.value)) : t(\"update:isOpen\", typeof g == \"boolean\" ? g : !e.isOpen));\n      }\n      return () => {\n        if (!y.value) return E(\"style-switch-control\");\n        const g = {\n          isOpen: c,\n          toggleOpen: b,\n          setStyle: C,\n          mapStyles: e.mapStyles,\n          currentStyle: I\n        };\n        return T(me, {\n          to: S.container\n        }, r.default ? r.default(g) : [r.button ? r.button(g) : T(re, {\n          type: ee.MDI,\n          path: \"M12,18.54L19.37,12.8L21,14.07L12,21.07L3,14.07L4.62,12.81L12,18.54M12,16L3,9L12,2L21,9L12,16M12,4.53L6.26,9L12,13.47L17.74,9L12,4.53Z\",\n          class: [\"maplibregl-ctrl-icon maplibregl-style-switch\", c.value ? \"is-open\" : \"\"],\n          onClick: b.bind(null, !0)\n        }), r.styleList ? r.styleList(g) : T(\"div\", {\n          class: [\"maplibregl-style-list\", c.value ? \"is-open\" : \"\"]\n        }, e.mapStyles.map(n => {\n          var u, F;\n          return n.icon ? T(re, {\n            type: ee.MDI,\n            path: n.icon.path,\n            class: ((u = I.value) == null ? void 0 : u.name) === n.name ? \"is-active\" : \"\",\n            onClick: () => C(n)\n          }, ce(n.label)) : T(\"button\", {\n            type: \"button\",\n            class: ((F = I.value) == null ? void 0 : F.name) === n.name ? \"is-active\" : \"\",\n            onClick: () => C(n)\n          }, ce(n.label));\n        }))]);\n      };\n    },\n    // just only for code assist\n    template: `\n\t\t<slot>\n\t\t<slot name=\"button\"></slot>\n\t\t<slot name=\"styleList\"></slot>\n\t\t</slot>\n\t`\n  }),\n  Fe = /* @__PURE__ */p({\n    name: \"MglMarker\",\n    props: {\n      coordinates: {\n        type: [Object, Array],\n        required: !0\n      },\n      offset: [Object, Array],\n      anchor: String,\n      color: String,\n      // draggable        : Boolean as PropType<boolean>, todo implement feature\n      clickTolerance: Number,\n      rotation: Number,\n      rotationAlignment: String,\n      pitchAlignment: String,\n      scale: Number\n    },\n    setup(e) {\n      const t = s(A),\n        r = Object.keys(e).filter(a => e[a] !== void 0 && z.MARKER_OPTION_KEYS.indexOf(a) !== -1).reduce((a, i) => (a[i] = te(e[i]), a), {}),\n        o = new Ee(r);\n      return o.setLngLat(e.coordinates).addTo(t.value), m(() => e.coordinates, a => o.setLngLat(a)), m(() => e.offset, a => o.setOffset(a || [0, 0])), m(() => e.pitchAlignment, a => o.setPitchAlignment(a || \"auto\")), m(() => e.rotationAlignment, a => o.setRotationAlignment(a || \"auto\")), P(o.remove.bind(o)), {\n        marker: o\n      };\n    },\n    render() {}\n  });\nclass $ {\n  constructor() {\n    L(this, \"unmountHandlers\", /* @__PURE__ */new Map());\n  }\n  registerUnmountHandler(t, r) {\n    this.unmountHandlers.set(t, r);\n  }\n  unregisterUnmountHandler(t) {\n    this.unmountHandlers.delete(t);\n  }\n  unmount() {\n    this.unmountHandlers.forEach(t => t());\n  }\n}\nconst q = class q {\n  static genSourceOpts(t, r, o) {\n    return Object.keys(r).filter(a => r[a] !== void 0 && o.indexOf(a) !== -1).reduce((a, i) => (a[i] = te(r[i]), a), {\n      type: t\n    });\n  }\n  static getSourceRef(t, r) {\n    const o = typeof r == \"string\",\n      a = String(t) + (o ? r : \"\");\n    let i = q.REFS.get(a);\n    return i || (i = G(o ? null : void 0), q.REFS.set(a, i)), i;\n  }\n};\nL(q, \"REFS\", /* @__PURE__ */new Map());\nlet O = q;\nfunction K(e, t, r, o, a) {\n  const i = s(A),\n    l = s(w),\n    y = s(le);\n  function c() {\n    l.value && (i.value.addSource(t.sourceId, O.genSourceOpts(r, t, o)), e.value = i.value.getSource(t.sourceId));\n  }\n  function I() {\n    e.value = null;\n  }\n  return m(l, c, {\n    immediate: !0\n  }), i.value.on(\"style.load\", c), y.on(\"styleSwitched\", I), P(() => {\n    l.value && (a.unmount(), i.value.removeSource(t.sourceId)), i.value.off(\"style.load\", c), y.off(\"styleSwitched\", I);\n  });\n}\nconst Ve = Y({\n    animate: void 0,\n    canvas: void 0,\n    coordinates: void 0\n  }),\n  Ge = /* @__PURE__ */p({\n    name: \"MglCanvasSource\",\n    props: {\n      sourceId: {\n        type: String,\n        required: !0\n      },\n      coordinates: Array,\n      animate: Boolean,\n      canvas: [Object, String]\n    },\n    slots: Object,\n    setup(e, {\n      slots: t\n    }) {\n      const r = s(M),\n        o = O.getSourceRef(r, e.sourceId),\n        a = new $();\n      return R(N, e.sourceId), R(U, a), K(o, e, \"canvas\", Ve, a), m(v(e, \"coordinates\"), i => {\n        var l;\n        i && ((l = o.value) == null || l.setCoordinates(i));\n      }), () => [E(\"Canvas Source\"), o.value && t.default ? t.default({}) : void 0];\n    }\n  }),\n  Ue = Y({\n    data: void 0,\n    maxzoom: void 0,\n    attribution: void 0,\n    buffer: void 0,\n    tolerance: void 0,\n    cluster: void 0,\n    clusterRadius: void 0,\n    clusterMaxZoom: void 0,\n    clusterMinPoints: void 0,\n    clusterProperties: void 0,\n    lineMetrics: void 0,\n    generateId: void 0,\n    promoteId: void 0,\n    filter: void 0\n  }),\n  Ze = /* @__PURE__ */p({\n    name: \"MglGeoJsonSource\",\n    props: {\n      sourceId: {\n        type: String,\n        required: !0\n      },\n      data: [Object, String],\n      maxzoom: Number,\n      attribution: String,\n      buffer: Number,\n      tolerance: Number,\n      cluster: [Number, Boolean],\n      clusterRadius: Number,\n      clusterMaxZoom: Number,\n      clusterMinPoints: Number,\n      clusterProperties: Object,\n      lineMetrics: Boolean,\n      generateId: Boolean,\n      promoteId: [Object, String],\n      filter: [Array, String, Object]\n    },\n    slots: Object,\n    setup(e, {\n      slots: t\n    }) {\n      const r = s(M),\n        o = O.getSourceRef(r, e.sourceId),\n        a = new $();\n      return R(N, e.sourceId), R(U, a), K(o, e, \"geojson\", Ue, a), m(v(e, \"data\"), i => {\n        var l;\n        return (l = o.value) == null ? void 0 : l.setData(i || {\n          type: \"FeatureCollection\",\n          features: []\n        });\n      }), () => [E(\"GeoJSON Source\"), o.value && t.default ? t.default({}) : void 0];\n    }\n  }),\n  We = Y({\n    url: void 0,\n    coordinates: void 0\n  }),\n  Ye = /* @__PURE__ */p({\n    name: \"MglImageSource\",\n    props: {\n      sourceId: {\n        type: String,\n        required: !0\n      },\n      url: String,\n      coordinates: Array\n    },\n    slots: Object,\n    setup(e, {\n      slots: t\n    }) {\n      const r = s(M),\n        o = O.getSourceRef(r, e.sourceId),\n        a = new $();\n      return R(N, e.sourceId), R(U, a), K(o, e, \"image\", We, a), m(v(e, \"coordinates\"), i => {\n        var l;\n        i && ((l = o.value) == null || l.setCoordinates(i));\n      }), () => [E(\"Image Source\"), o.value && t.default ? t.default({}) : void 0];\n    }\n  }),\n  $e = Y({\n    url: void 0,\n    tiles: void 0,\n    bounds: void 0,\n    minzoom: void 0,\n    maxzoom: void 0,\n    tileSize: void 0,\n    scheme: void 0,\n    attribution: void 0,\n    volatile: void 0\n  }),\n  Ke = /* @__PURE__ */p({\n    name: \"MglRasterSource\",\n    props: {\n      sourceId: {\n        type: String,\n        required: !0\n      },\n      url: String,\n      tiles: Array,\n      bounds: Array,\n      minzoom: Number,\n      maxzoom: Number,\n      tileSize: Number,\n      scheme: String,\n      attribution: String,\n      volatile: Boolean\n    },\n    slots: Object,\n    setup(e, {\n      slots: t\n    }) {\n      const r = s(M),\n        o = O.getSourceRef(r, e.sourceId),\n        a = new $();\n      return R(N, e.sourceId), R(U, a), K(o, e, \"raster\", $e, a), () => [E(\"Raster Source\"), o.value && t.default ? t.default({}) : void 0];\n    }\n  }),\n  qe = Y({\n    url: void 0,\n    tiles: void 0,\n    bounds: void 0,\n    minzoom: void 0,\n    maxzoom: void 0,\n    tileSize: void 0,\n    attribution: void 0,\n    encoding: void 0,\n    volatile: void 0\n  }),\n  Je = /* @__PURE__ */p({\n    name: \"MglRasterDemSource\",\n    props: {\n      sourceId: {\n        type: String,\n        required: !0\n      },\n      url: String,\n      tiles: Array,\n      bounds: Array,\n      minzoom: Number,\n      maxzoom: Number,\n      tileSize: Number,\n      attribution: String,\n      encoding: String,\n      volatile: Boolean\n    },\n    slots: Object,\n    setup(e, {\n      slots: t\n    }) {\n      const r = s(M),\n        o = O.getSourceRef(r, e.sourceId),\n        a = new $();\n      return R(N, e.sourceId), R(U, a), K(o, e, \"raster-dem\", qe, a), () => [E(\"RasterDem Source\"), o.value && t.default ? t.default({}) : void 0];\n    }\n  }),\n  Xe = Y({\n    url: void 0,\n    tiles: void 0,\n    bounds: void 0,\n    scheme: void 0,\n    minzoom: void 0,\n    maxzoom: void 0,\n    attribution: void 0,\n    promoteId: void 0,\n    volatile: void 0\n  }),\n  Qe = /* @__PURE__ */p({\n    name: \"MglVectorSource\",\n    props: {\n      sourceId: {\n        type: String,\n        required: !0\n      },\n      url: String,\n      tiles: Array,\n      bounds: Array,\n      scheme: String,\n      minzoom: Number,\n      maxzoom: Number,\n      attribution: String,\n      promoteId: [Object, String],\n      volatile: Boolean\n    },\n    slots: Object,\n    setup(e, {\n      slots: t\n    }) {\n      const r = s(M),\n        o = O.getSourceRef(r, e.sourceId),\n        a = new $();\n      return R(N, e.sourceId), R(U, a), K(o, e, \"vector\", Xe, a), m(v(e, \"tiles\"), i => {\n        var l;\n        return (l = o.value) == null ? void 0 : l.setTiles(i || []);\n      }), m(v(e, \"url\"), i => {\n        var l;\n        return (l = o.value) == null ? void 0 : l.setUrl(i || \"\");\n      }), () => [E(\"Vector Source\"), o.value && t.default ? t.default({}) : void 0];\n    }\n  }),\n  et = Y({\n    urls: void 0,\n    coordinates: void 0\n  }),\n  tt = /* @__PURE__ */p({\n    name: \"MglVideoSource\",\n    props: {\n      sourceId: {\n        type: String,\n        required: !0\n      },\n      urls: Array,\n      coordinates: Array\n    },\n    slots: Object,\n    setup(e, {\n      slots: t\n    }) {\n      const r = s(M),\n        o = O.getSourceRef(r, e.sourceId),\n        a = new $();\n      return R(N, e.sourceId), R(U, a), K(o, e, \"video\", et, a), m(v(e, \"coordinates\"), i => {\n        var l;\n        i && ((l = o.value) == null || l.setCoordinates(i));\n      }), () => [E(\"Video Source\"), o.value && t.default ? t.default({}) : void 0];\n    }\n  }),\n  x = class x {\n    static genLayerOpts(t, r, o, a) {\n      return Object.keys(o).filter(i => o[i] !== void 0 && x.SOURCE_OPTS.indexOf(i) !== -1).reduce((i, l) => (i[l === \"sourceLayer\" ? \"source-layer\" : l] = te(o[l]), i), {\n        type: r,\n        source: o.source || a,\n        id: t\n      });\n    }\n    static registerLayerEvents(t, r, o) {\n      if (o.props) for (let a = 0, i = x.LAYER_EVENTS.length; a < i; a++) {\n        const l = \"on\" + x.LAYER_EVENTS[a].charAt(0).toUpperCase() + x.LAYER_EVENTS[a].substr(1);\n        o.props[l] && t.on(x.LAYER_EVENTS[a], r, o.props[l]);\n      }\n    }\n    static unregisterLayerEvents(t, r, o) {\n      if (o.props) for (let a = 0, i = x.LAYER_EVENTS.length; a < i; a++) {\n        const l = \"on\" + x.LAYER_EVENTS[a].charAt(0).toUpperCase() + x.LAYER_EVENTS[a].substr(1);\n        o.props[l] && t.off(x.LAYER_EVENTS[a], r, o.props[l]);\n      }\n    }\n  };\nL(x, \"SOURCE_OPTS\", [\"metadata\", \"ref\", \"source\", \"sourceLayer\", \"minzoom\", \"maxzoom\", \"interactive\", \"filter\", \"layout\", \"paint\"]), L(x, \"LAYER_EVENTS\", [\"click\", \"dblclick\", \"mousedown\", \"mouseup\", \"mousemove\", \"mouseenter\", \"mouseleave\", \"mouseover\", \"mouseout\", \"contextmenu\", \"touchstart\", \"touchend\", \"touchcancel\"]), L(x, \"SHARED\", {\n  props: {\n    layerId: {\n      type: String,\n      required: !0\n    },\n    source: [String, Object],\n    metadata: [Object, Array, String, Number],\n    ref: String,\n    sourceLayer: String,\n    minzoom: Number,\n    maxzoom: Number,\n    interactive: Boolean,\n    filter: Array,\n    before: String\n  },\n  emits: [\"click\", \"dblclick\", \"mousedown\", \"mouseup\", \"mousemove\", \"mouseenter\", \"mouseleave\", \"mouseover\", \"mouseout\", \"contextmenu\", \"touchstart\", \"touchend\", \"touchcancel\"]\n});\nlet f = x;\nfunction D(e, t) {\n  const r = s(A),\n    o = s(w),\n    a = s(U);\n  function i() {\n    o.value && (t && f.unregisterLayerEvents(r.value, e, t.vnode), r.value.getLayer(e) && r.value.removeLayer(e));\n  }\n  a.registerUnmountHandler(e, i), P(() => {\n    a.unregisterUnmountHandler(e), i();\n  });\n}\nconst at = /* @__PURE__ */p({\n    name: \"MglBackgroundLayer\",\n    props: {\n      ...f.SHARED.props,\n      layout: Object,\n      paint: Object\n    },\n    emits: [...f.SHARED.emits],\n    setup(e) {\n      const t = s(N);\n      if (!t && !e.source) {\n        _(\"Background Layer: layer must be used inside source tag or source prop must be set\");\n        return;\n      }\n      const r = s(A),\n        o = s(w),\n        a = s(M),\n        i = O.getSourceRef(a, e.source || t);\n      return D(e.layerId), m([o, i], ([l, y]) => {\n        l && (y || y === void 0) && r.value.addLayer(f.genLayerOpts(e.layerId, \"background\", e, t), e.before || void 0);\n      }, {\n        immediate: !0\n      }), () => E(\"Background Layer\");\n    }\n  }),\n  ot = /* @__PURE__ */p({\n    name: \"MglCircleLayer\",\n    props: {\n      ...f.SHARED.props,\n      layout: Object,\n      paint: Object\n    },\n    emits: [...f.SHARED.emits],\n    setup(e) {\n      const t = s(N);\n      if (!t && !e.source) {\n        _(\"Circle Layer: layer must be used inside source tag or source prop must be set\");\n        return;\n      }\n      const r = B(),\n        o = s(A),\n        a = s(w),\n        i = s(M),\n        l = O.getSourceRef(i, e.source || t);\n      return D(e.layerId, r), m([a, l], ([y, c]) => {\n        y && (c || c === void 0) && (o.value.addLayer(f.genLayerOpts(e.layerId, \"circle\", e, t), e.before || void 0), f.registerLayerEvents(o.value, e.layerId, r.vnode));\n      }, {\n        immediate: !0\n      }), () => E(\"Circle Layer\");\n    }\n  }),\n  rt = /* @__PURE__ */p({\n    name: \"MglFillLayer\",\n    props: {\n      ...f.SHARED.props,\n      layout: Object,\n      paint: Object\n    },\n    emits: [...f.SHARED.emits],\n    setup(e) {\n      const t = s(N);\n      if (!t && !e.source) {\n        _(\"Fill Layer: layer must be used inside source tag or source prop must be set\");\n        return;\n      }\n      const r = B(),\n        o = s(A),\n        a = s(w),\n        i = s(M),\n        l = O.getSourceRef(i, e.source || t);\n      return D(e.layerId, r), m([a, l], ([y, c]) => {\n        y && (c || c === void 0) && (o.value.addLayer(f.genLayerOpts(e.layerId, \"fill\", e, t), e.before || void 0), f.registerLayerEvents(o.value, e.layerId, r.vnode));\n      }, {\n        immediate: !0\n      }), () => E(\"Fill Layer\");\n    }\n  }),\n  it = /* @__PURE__ */p({\n    name: \"MglFillExtrusionLayer\",\n    props: {\n      ...f.SHARED.props,\n      layout: Object,\n      paint: Object\n    },\n    emits: [...f.SHARED.emits],\n    setup(e) {\n      const t = s(N);\n      if (!t && !e.source) {\n        _(\"Fill Extrude Layer: layer must be used inside source tag or source prop must be set\");\n        return;\n      }\n      const r = B(),\n        o = s(A),\n        a = s(w),\n        i = s(M),\n        l = O.getSourceRef(i, e.source || t);\n      return D(e.layerId, r), m([a, l], ([y, c]) => {\n        y && (c || c === void 0) && (o.value.addLayer(f.genLayerOpts(e.layerId, \"fill-extrusion\", e, t), e.before || void 0), f.registerLayerEvents(o.value, e.layerId, r.vnode));\n      }, {\n        immediate: !0\n      }), () => E(\"Fill Extrusion Layer\");\n    }\n  }),\n  nt = /* @__PURE__ */p({\n    name: \"MglHeatmapLayer\",\n    props: {\n      ...f.SHARED.props,\n      layout: Object,\n      paint: Object\n    },\n    emits: [...f.SHARED.emits],\n    setup(e) {\n      const t = s(N);\n      if (!t && !e.source) {\n        _(\"Heatmap Layer: layer must be used inside source tag or source prop must be set\");\n        return;\n      }\n      const r = B(),\n        o = s(A),\n        a = s(w),\n        i = s(M),\n        l = O.getSourceRef(i, e.source || t);\n      return D(e.layerId, r), m([a, l], ([y, c]) => {\n        y && (c || c === void 0) && (o.value.addLayer(f.genLayerOpts(e.layerId, \"heatmap\", e, t), e.before || void 0), f.registerLayerEvents(o.value, e.layerId, r.vnode));\n      }, {\n        immediate: !0\n      }), () => E(\"Heatmap Layer\");\n    }\n  }),\n  lt = /* @__PURE__ */p({\n    name: \"MglHillshadeLayer\",\n    props: {\n      ...f.SHARED.props,\n      layout: Object,\n      paint: Object\n    },\n    emits: [...f.SHARED.emits],\n    setup(e) {\n      const t = s(N);\n      if (!t && !e.source) {\n        _(\"Hillshade Layer: layer must be used inside source tag or source prop must be set\");\n        return;\n      }\n      const r = B(),\n        o = s(A),\n        a = s(w),\n        i = s(M),\n        l = O.getSourceRef(i, e.source || t);\n      return D(e.layerId, r), m([a, l], ([y, c]) => {\n        y && (c || c === void 0) && (o.value.addLayer(f.genLayerOpts(e.layerId, \"hillshade\", e, t), e.before || void 0), f.registerLayerEvents(o.value, e.layerId, r.vnode));\n      }, {\n        immediate: !0\n      }), () => E(\"Hillshade Layer\");\n    }\n  }),\n  st = /* @__PURE__ */p({\n    name: \"MglLineLayer\",\n    props: {\n      ...f.SHARED.props,\n      layout: Object,\n      paint: Object\n    },\n    emits: [...f.SHARED.emits],\n    setup(e) {\n      const t = s(N);\n      if (!t && !e.source) {\n        _(\"Line Layer: layer must be used inside source tag or source prop must be set\");\n        return;\n      }\n      const r = B(),\n        o = s(A),\n        a = s(w),\n        i = s(M),\n        l = O.getSourceRef(i, e.source || t);\n      return D(e.layerId, r), m([a, l], ([y, c]) => {\n        y && (c || c === void 0) && (o.value.addLayer(f.genLayerOpts(e.layerId, \"line\", e, t), e.before || void 0), f.registerLayerEvents(o.value, e.layerId, r.vnode));\n      }, {\n        immediate: !0\n      }), () => E(\"Line Layer\");\n    }\n  }),\n  ut = /* @__PURE__ */p({\n    name: \"MglRasterLayer\",\n    props: {\n      ...f.SHARED.props,\n      layout: Object,\n      paint: Object\n    },\n    emits: [...f.SHARED.emits],\n    setup(e) {\n      const t = s(N);\n      if (!t && !e.source) {\n        _(\"Raster Layer: layer must be used inside source tag or source prop must be set\");\n        return;\n      }\n      const r = B(),\n        o = s(A),\n        a = s(w),\n        i = s(M),\n        l = O.getSourceRef(i, e.source || t);\n      return D(e.layerId, r), m([a, l], ([y, c]) => {\n        y && (c || c === void 0) && (o.value.addLayer(f.genLayerOpts(e.layerId, \"raster\", e, t), e.before || void 0), f.registerLayerEvents(o.value, e.layerId, r.vnode));\n      }, {\n        immediate: !0\n      }), () => E(\"Raster Layer\");\n    }\n  }),\n  ct = /* @__PURE__ */p({\n    name: \"MglSymbolLayer\",\n    props: {\n      ...f.SHARED.props,\n      layout: Object,\n      paint: Object\n    },\n    emits: [...f.SHARED.emits],\n    setup(e) {\n      const t = s(N);\n      if (!t && !e.source) {\n        _(\"Symbol Layer: layer must be used inside source tag or source prop must be set\");\n        return;\n      }\n      const r = B(),\n        o = s(A),\n        a = s(w),\n        i = s(M),\n        l = O.getSourceRef(i, e.source || t);\n      return D(e.layerId, r), m([a, l], ([y, c]) => {\n        y && (c || c === void 0) && (o.value.addLayer(f.genLayerOpts(e.layerId, \"symbol\", e, t), e.before || void 0), f.registerLayerEvents(o.value, e.layerId, r.vnode));\n      }, {\n        immediate: !0\n      }), () => E(\"Symbol Layer\");\n    }\n  }),\n  dt = /* @__PURE__ */Object.freeze( /* @__PURE__ */Object.defineProperty({\n    __proto__: null,\n    MglAttributionControl: xe,\n    MglBackgroundLayer: at,\n    MglButton: re,\n    MglCanvasSource: Ge,\n    MglCircleLayer: ot,\n    MglCustomControl: we,\n    MglFillExtrusionLayer: it,\n    MglFillLayer: rt,\n    MglFrameRateControl: He,\n    MglFullscreenControl: Te,\n    MglGeoJsonSource: Ze,\n    MglGeolocationControl: ze,\n    MglHeatmapLayer: nt,\n    MglHillshadeLayer: lt,\n    MglImageSource: Ye,\n    MglLineLayer: st,\n    MglMap: Ce,\n    MglMarker: Fe,\n    MglNavigationControl: _e,\n    MglRasterDemSource: Je,\n    MglRasterLayer: ut,\n    MglRasterSource: Ke,\n    MglScaleControl: je,\n    MglStyleSwitchControl: De,\n    MglSymbolLayer: ct,\n    MglVectorSource: Qe,\n    MglVideoSource: tt\n  }, Symbol.toStringTag, {\n    value: \"Module\"\n  })),\n  pt = function (t) {\n    Object.entries(dt).forEach(([r, o]) => {\n      t.component(r, o);\n    });\n  };\nexport { vt as AllOptions, Y as AllSourceOptions, xe as MglAttributionControl, at as MglBackgroundLayer, re as MglButton, Ge as MglCanvasSource, ot as MglCircleLayer, we as MglCustomControl, d as MglDefaults, it as MglFillExtrusionLayer, rt as MglFillLayer, He as MglFrameRateControl, Te as MglFullscreenControl, Ze as MglGeoJsonSource, ze as MglGeolocationControl, nt as MglHeatmapLayer, lt as MglHillshadeLayer, Ye as MglImageSource, st as MglLineLayer, Ce as MglMap, Fe as MglMarker, _e as MglNavigationControl, Je as MglRasterDemSource, ut as MglRasterLayer, Ke as MglRasterSource, je as MglScaleControl, De as MglStyleSwitchControl, ct as MglSymbolLayer, Qe as MglVectorSource, tt as MglVideoSource, Z as Position, M as componentIdSymbol, pt as default, le as emitterSymbol, j as isInitializedSymbol, w as isLoadedSymbol, A as mapSymbol, N as sourceIdSymbol, U as sourceLayerRegistry, D as useDisposableLayer, ht as useMap, W as usePositionWatcher, K as useSource };","map":{"version":3,"names":["he","e","t","r","ve","enumerable","configurable","writable","value","L","reactive","ie","defineComponent","p","markRaw","ue","getCurrentInstance","B","shallowRef","oe","ref","G","provide","R","watch","m","toRef","v","onMounted","pe","onBeforeUnmount","P","h","T","unref","te","nextTick","ne","inject","s","createCommentVNode","E","Teleport","me","warn","_","createTextVNode","ce","Map","Se","AttributionControl","be","FullscreenControl","Le","GeolocateControl","Ae","NavigationControl","Re","ScaleControl","Oe","Marker","Ee","Ie","A","Symbol","w","j","M","N","U","le","vt","Object","keys","Y","d","style","center","freeze","zoom","trackResize","z","createEventHandler","o","a","i","emit","type","map","component","event","Z","TOP_LEFT","TOP_RIGHT","BOTTOM_LEFT","BOTTOM_RIGHT","k","values","X","ge","get","isLoaded","isMounted","language","set","Me","loaded","Ne","arguments","l","apply","clearTimeout","window","setTimeout","cancel","fe","AUTO","STYLE_LOCK","LATIN","NON_LATIN","LOCAL","ALBANIAN","AMHARIC","ARABIC","ARMENIAN","AZERBAIJANI","BASQUE","BELORUSSIAN","BOSNIAN","BRETON","BULGARIAN","CATALAN","CHINESE","CORSICAN","CROATIAN","CZECH","DANISH","DUTCH","ENGLISH","ESPERANTO","ESTONIAN","FINNISH","FRENCH","FRISIAN","GEORGIAN","GERMAN","GREEK","HEBREW","HINDI","HUNGARIAN","ICELANDIC","INDONESIAN","IRISH","ITALIAN","JAPANESE","JAPANESE_HIRAGANA","JAPANESE_KANA","JAPANESE_LATIN","JAPANESE_2018","KANNADA","KAZAKH","KOREAN","KOREAN_LATIN","KURDISH","ROMAN_LATIN","LATVIAN","LITHUANIAN","LUXEMBOURGISH","MACEDONIAN","MALAYALAM","MALTESE","NORWEGIAN","OCCITAN","POLISH","PORTUGUESE","ROMANIAN","ROMANSH","RUSSIAN","SCOTTISH_GAELIC","SERBIAN_CYRILLIC","SERBIAN_LATIN","SLOVAK","SLOVENE","SPANISH","SWEDISH","TAMIL","TELUGU","THAI","TURKISH","UKRAINIAN","WELSH","Set","ae","getStyle","layers","y","c","I","length","S","H","layout","getLayoutProperty","id","C","Array","isArray","trim","toLowerCase","b","slice","g","n","String","exec","toString","setLayoutProperty","Ce","name","props","width","Number","default","height","antialias","Boolean","attributionControl","bearing","bearingSnap","bounds","boxZoom","clickTolerance","collectResourceTiming","crossSourceCollisions","customAttribution","dragPan","dragRotate","doubleClickZoom","hash","fadeDuration","failIfMajorPerformanceCaveat","fitBoundsOptions","interactive","keyboard","locale","localIdeographFontFamily","logoPosition","validator","maxBounds","maxPitch","maxZoom","minPitch","minZoom","preserveDrawingBuffer","pitch","pitchWithRotate","refreshExpiredTiles","renderWorldCopies","scrollZoom","mapStyle","transformRequest","Function","touchZoomRotate","touchPitch","maxTileCacheSize","mapKey","pixelRatio","cooperativeGestures","emits","setup","uid","u","setZoom","filter","MAP_OPTION_KEYS","indexOf","reduce","F","container","once","on","vnode","MAP_EVENT_TYPES","se","getCanvas","addEventListener","removeEventListener","_controls","forEach","removeControl","off","startsWith","substring","remove","ResizeObserver","resize","bind","observe","disconnect","expose","class","slots","W","hasControl","addControl","immediate","xe","position","compact","render","V","constructor","isAdded","document","createElement","setClasses","getDefaultPosition","onAdd","onRemove","classList","CONTROL_CLASS","CONTROL_GROUP_CLASS","add","Q","we","noClasses","to","call","Te","Pe","devicePixelRatio","background","barWidth","color","font","graphHeight","graphWidth","graphTop","graphRight","className","backgroundColor","borderRadius","readOutput","fontFamily","padding","fontSize","fontWeight","textContent","canvas","cssText","appendChild","eventHandlers","onMoveStart","onMoveEnd","clear","parentNode","removeChild","frames","time","performance","now","onRender","updateGraph","getFPS","totalTime","totalFrames","Math","round","getContext","fillStyle","globalAlpha","fillRect","drawImage","He","ze","positionOptions","enableHighAccuracy","timeout","trackUserLocation","showAccuracyCircle","showUserLocation","_e","showCompass","showZoom","visualizePitch","ye","IMPERIAL","METRIC","NAUTICAL","Be","je","maxWidth","unit","ee","DEFAULT","TEXT","MDI","SIMPLE_ICON","ke","J","text","mdi","size","viewbox","re","path","viewBox","fill","de","stopPropagation","De","mapStyles","required","modelValue","isOpen","setStyle","diff","toggleOpen","currentStyle","button","onClick","styleList","icon","label","template","Fe","coordinates","offset","anchor","rotation","rotationAlignment","pitchAlignment","scale","MARKER_OPTION_KEYS","setLngLat","addTo","setOffset","setPitchAlignment","setRotationAlignment","marker","$","registerUnmountHandler","unmountHandlers","unregisterUnmountHandler","delete","unmount","q","genSourceOpts","getSourceRef","REFS","O","K","addSource","sourceId","getSource","removeSource","Ve","animate","Ge","setCoordinates","Ue","data","maxzoom","attribution","buffer","tolerance","cluster","clusterRadius","clusterMaxZoom","clusterMinPoints","clusterProperties","lineMetrics","generateId","promoteId","Ze","setData","features","We","url","Ye","$e","tiles","minzoom","tileSize","scheme","volatile","Ke","qe","encoding","Je","Xe","Qe","setTiles","setUrl","et","urls","tt","x","genLayerOpts","SOURCE_OPTS","source","registerLayerEvents","LAYER_EVENTS","charAt","toUpperCase","substr","unregisterLayerEvents","layerId","metadata","sourceLayer","before","f","D","getLayer","removeLayer","at","SHARED","paint","addLayer","ot","rt","it","nt","lt","st","ut","ct","MglStyleSwitchControl","MglSymbolLayer","MglVectorSource","MglVideoSource"],"sources":["../src/lib/types.ts","../src/lib/defaults.ts","../src/lib/lib/map.lib.ts","../src/lib/components/controls/position.enum.ts","../src/lib/lib/mapRegistry.ts","../src/lib/lib/debounce.ts","../node_modules/modular-maptiler-sdk/src/language.ts","../src/lib/components/map.component.ts","../src/lib/composable/usePositionWatcher.ts","../src/lib/components/controls/attribution.control.ts","../src/lib/components/controls/custom.control.ts","../src/lib/components/controls/fullscreen.control.ts","../src/lib/components/controls/frameRate.control.ts","../src/lib/components/controls/geolocation.control.ts","../src/lib/components/controls/navigation.control.ts","../src/lib/components/controls/scale.control.ts","../src/lib/components/button.component.ts","../src/lib/components/controls/styleSwitch.control.ts","../src/lib/components/marker.component.ts","../src/lib/lib/sourceLayer.registry.ts","../src/lib/lib/source.lib.ts","../src/lib/composable/useSource.ts","../src/lib/components/sources/canvas.source.ts","../src/lib/components/sources/geojson.source.ts","../src/lib/components/sources/image.source.ts","../src/lib/components/sources/raster.source.ts","../src/lib/components/sources/rasterDem.source.ts","../src/lib/components/sources/vector.source.ts","../src/lib/components/sources/video.source.ts","../src/lib/lib/layer.lib.ts","../src/lib/composable/useDisposableLayer.ts","../src/lib/components/layers/background.layer.ts","../src/lib/components/layers/circle.layer.ts","../src/lib/components/layers/fill.layer.ts","../src/lib/components/layers/fillExtrusion.layer.ts","../src/lib/components/layers/heatmap.layer.ts","../src/lib/components/layers/hillshade.layer.ts","../src/lib/components/layers/line.layer.ts","../src/lib/components/layers/raster.layer.ts","../src/lib/components/layers/smybol.layer.ts","../src/lib/main.ts"],"sourcesContent":["import { InjectionKey, Ref, ShallowRef } from 'vue';\nimport { Map, SourceSpecification, StyleSpecification } from 'maplibre-gl';\nimport { MglMap } from '@/lib/components';\nimport { Emitter } from 'mitt';\nimport { SourceLayerRegistry } from '@/lib/lib/sourceLayer.registry';\n\nexport const mapSymbol           = Symbol('map') as InjectionKey<ShallowRef<Map | undefined>>,\n\t\t\t isLoadedSymbol      = Symbol('isLoaded') as InjectionKey<Ref<boolean>>,\n\t\t\t isInitializedSymbol = Symbol('isInitialized') as InjectionKey<Ref<boolean>>,\n\t\t\t componentIdSymbol   = Symbol('componentId') as InjectionKey<number>,\n\t\t\t sourceIdSymbol      = Symbol('sourceId') as InjectionKey<string>,\n\t\t\t sourceLayerRegistry = Symbol('sourceLayerRegistry') as InjectionKey<SourceLayerRegistry>,\n\t\t\t emitterSymbol       = Symbol('emitter') as InjectionKey<Emitter<MglEvents>>;\n\nexport interface MglEvent<T = any> {\n\ttype: string;\n\tcomponent: InstanceType<typeof MglMap>;\n\tmap: Map;\n\tevent: T;\n}\n\nexport type MglEvents = {\n\tstyleSwitched: StyleSwitchItem;\n}\n\nexport interface StyleSwitchItem {\n\tname: string;\n\tlabel: string;\n\ticon?: {\n\t\tpath: string;\n\t};\n\tstyle: StyleSpecification | string;\n}\n\nexport type AllProps<T extends object> = { [K in keyof T]: undefined };\n\n// only proper way to ensure all possible option to track option changes by type system\nexport function AllOptions<T extends object>(obj: AllProps<Required<T>>) {\n\treturn Object.keys(obj) as Array<keyof T>;\n}\n\nexport function AllSourceOptions<T = SourceSpecification>(obj: AllProps<Required<Omit<T, 'type'>>>) {\n\treturn Object.keys(obj) as Array<keyof T>;\n}\n\nexport type ValidLanguages =\n\t'sq'\n\t| 'am'\n\t| 'ar'\n\t| 'hy'\n\t| 'az'\n\t| 'eu'\n\t| 'be'\n\t| 'bs'\n\t| 'br'\n\t| 'bg'\n\t| 'ca'\n\t| 'zh'\n\t| 'co'\n\t| 'hr'\n\t| 'cs'\n\t| 'da'\n\t| 'nl'\n\t| 'en'\n\t| 'eo'\n\t| 'et'\n\t| 'fi'\n\t| 'fr'\n\t| 'fy'\n\t| 'ka'\n\t| 'de'\n\t| 'el'\n\t| 'he'\n\t| 'hi'\n\t| 'hu'\n\t| 'is'\n\t| 'id'\n\t| 'ga'\n\t| 'it'\n\t| 'ja'\n\t| 'ja-Hira'\n\t| 'ja_kana'\n\t| 'ja_rm'\n\t| 'ja-Latn'\n\t| 'kn'\n\t| 'kk'\n\t| 'ko'\n\t| 'ko-Latn'\n\t| 'ku'\n\t| 'la'\n\t| 'lv'\n\t| 'lt'\n\t| 'lb'\n\t| 'mk'\n\t| 'ml'\n\t| 'mt'\n\t| 'no'\n\t| 'oc'\n\t| 'pl'\n\t| 'pt'\n\t| 'ro'\n\t| 'rm'\n\t| 'ru'\n\t| 'gd'\n\t| 'sr'\n\t| 'sr-Latn'\n\t| 'sk'\n\t| 'sl'\n\t| 'es'\n\t| 'sv'\n\t| 'ta'\n\t| 'te'\n\t| 'th'\n\t| 'tr'\n\t| 'uk'\n\t| 'cy'\n","import { LngLatLike, MapOptions as MaplibreMapOptions } from 'maplibre-gl';\nimport { reactive } from 'vue';\nimport { ValidLanguages } from '@/lib/types';\n\nexport type MapOptions = Omit<MaplibreMapOptions, 'container' | 'style'> & { style: object | string, language?: ValidLanguages };\n\nexport const defaults = reactive<MapOptions>({\n\tstyle      : 'https://demotiles.maplibre.org/style.json',\n\tcenter     : Object.freeze([ 0, 0 ]) as LngLatLike,\n\tzoom       : 1,\n\ttrackResize: false\n});\n","import { Map, MapOptions, MarkerOptions } from 'maplibre-gl';\nimport { MglMap } from '@/lib/components';\nimport { MglEvent } from '@/lib/types';\n\nexport type MapEventHandler = (e: any) => void;\n\nexport class MapLib {\n\n\tstatic readonly MAP_OPTION_KEYS: Array<keyof MapOptions | 'mapStyle'> = [\n\t\t'antialias', 'attributionControl', 'bearing', 'bearingSnap', 'bounds', 'boxZoom', 'center', 'clickTolerance', 'collectResourceTiming',\n\t\t'crossSourceCollisions', 'container', 'customAttribution', 'dragPan', 'dragRotate', 'doubleClickZoom', 'hash', 'fadeDuration',\n\t\t'failIfMajorPerformanceCaveat', 'fitBoundsOptions', 'interactive', 'keyboard', 'locale', 'localIdeographFontFamily', 'logoPosition', 'maxBounds',\n\t\t'maxPitch', 'maxZoom', 'minPitch', 'minZoom', 'preserveDrawingBuffer', 'pitch', 'pitchWithRotate', 'refreshExpiredTiles', 'renderWorldCopies',\n\t\t'scrollZoom', 'mapStyle', 'trackResize', 'transformRequest', 'touchZoomRotate', 'touchPitch', 'zoom', 'maxTileCacheSize', 'pixelRatio',\n\t\t'cooperativeGestures'\n\t];\n\n\tstatic readonly MARKER_OPTION_KEYS: Array<keyof MarkerOptions> = [\n\t\t'element', 'offset', 'anchor', 'color', 'draggable', 'clickTolerance', 'rotation', 'rotationAlignment', 'pitchAlignment', 'scale'\n\t];\n\n\tstatic readonly MAP_EVENT_TYPES = [\n\t\t'error', 'load', 'idle', 'remove', 'render', 'resize', 'webglcontextlost', 'webglcontextrestored', 'dataloading', 'data', 'tiledataloading',\n\t\t'sourcedataloading', 'styledataloading', 'sourcedata', 'styledata', 'boxzoomcancel', 'boxzoomstart', 'boxzoomend', 'touchcancel', 'touchmove',\n\t\t'touchend', 'touchstart', 'click', 'contextmenu', 'dblclick', 'mousemove', 'mouseup', 'mousedown', 'mouseout', 'mouseover', 'movestart', 'move',\n\t\t'moveend', 'zoomstart', 'zoom', 'zoomend', 'rotatestart', 'rotate', 'rotateend', 'dragstart', 'drag', 'dragend', 'pitchstart', 'pitch', 'pitchend',\n\t\t'wheel'\n\t];\n\n\tstatic createEventHandler(component: InstanceType<typeof MglMap>, map: Map, ctx: {\n\t\temit: (t: string, payload: any) => void\n\t}, eventName: string): MapEventHandler {\n\t\treturn (payload = {}) => ctx.emit(eventName, { type: payload.type, map, component, event: payload } as MglEvent);\n\t}\n\n}\n","export enum Position {\n\tTOP_LEFT     = 'top-left',\n\tTOP_RIGHT    = 'top-right',\n\tBOTTOM_LEFT  = 'bottom-left',\n\tBOTTOM_RIGHT = 'bottom-right'\n}\n\nexport const PositionValues = Object.values(Position);\n\nexport type PositionProp = Position | 'top-left' | 'top-right' | 'bottom-left' | 'bottom-right';\n","import { MglMap } from '@/lib/components';\nimport maplibregl from 'maplibre-gl';\nimport { reactive, ShallowRef } from 'vue';\nimport { ValidLanguages } from '@/lib/types';\n\nexport interface MapInstance {\n\tcomponent?: InstanceType<typeof MglMap>;\n\tmap?: maplibregl.Map;\n\tisMounted: boolean;\n\tisLoaded: boolean;\n\tlanguage: ValidLanguages | null;\n}\n\nconst instances  = new Map<symbol | string, MapInstance>(),\n\t  defaultKey = Symbol('default');\n\n// useMap returns reactive version of MapInstance\nexport function useMap(key: symbol | string = defaultKey): MapInstance {\n\tlet component = instances.get(key);\n\tif (!component) {\n\t\tcomponent = reactive({ isLoaded: false, isMounted: false, language: null });\n\t\tinstances.set(key, component);\n\t}\n\treturn component;\n}\n\nexport function registerMap(instance: InstanceType<typeof MglMap>, map: ShallowRef<maplibregl.Map | undefined>, key: symbol | string = defaultKey): MapInstance {\n\tlet component = instances.get(key);\n\tif (!component) {\n\t\tcomponent = reactive({ isLoaded: false, isMounted: false, language: null });\n\t\tinstances.set(key, component);\n\t}\n\n\tcomponent.isLoaded  = false;\n\tcomponent.isMounted = false;\n\tcomponent.component = instance;\n\tcomponent.map       = map.value;\n\tcomponent.isLoaded  = map.value?.loaded() || false;\n\n\treturn component;\n}\n","export function debounce(fn: Function, wait = 250, immediate = false) {\n\tlet timeout: number | undefined;\n\n\tfunction debounced(/* ...args */) {\n\t\tconst args = arguments;\n\n\t\tconst later = () => {\n\t\t\ttimeout = undefined;\n\t\t\tif (immediate !== true) {\n\t\t\t\t// @ts-ignore\n\t\t\t\tfn.apply(this, args);\n\t\t\t}\n\t\t};\n\n\t\tclearTimeout(timeout!);\n\t\tif (immediate === true && timeout === undefined) {\n\t\t\t// @ts-ignore\n\t\t\tfn.apply(this, args);\n\t\t}\n\t\ttimeout = window.setTimeout(later, wait);\n\t}\n\n\tdebounced.cancel = () => {\n\t\tclearTimeout(timeout!);\n\t};\n\n\treturn debounced;\n}\n","import type { Map, SymbolLayerSpecification } from \"maplibre-gl\";\n\n/**\n * Languages. Note that not all the languages of this list are available but the compatibility list may be expanded in the future.\n */\nconst Language = {\n  /**\n   * AUTO mode uses the language of the browser\n   */\n  AUTO: \"auto\",\n\n  /**\n   * STYLE is a custom flag to keep the language of the map as defined into the style.\n   * If STYLE is set in the constructor, then further modification of the language\n   * with `.setLanguage()` is not possible.\n   */\n  STYLE_LOCK: \"style_lock\",\n\n  /**\n   * Default fallback languages that uses latin charaters\n   */\n  LATIN: \"latin\",\n\n  /**\n   * Default fallback languages that uses non-latin charaters\n   */\n  NON_LATIN: \"nonlatin\",\n\n  /**\n   * Labels are in their local language, when available\n   */\n  LOCAL: \"\",\n\n  ALBANIAN: \"sq\",\n  AMHARIC: \"am\",\n  ARABIC: \"ar\",\n  ARMENIAN: \"hy\",\n  AZERBAIJANI: \"az\",\n  BASQUE: \"eu\",\n  BELORUSSIAN: \"be\",\n  BOSNIAN: \"bs\",\n  BRETON: \"br\",\n  BULGARIAN: \"bg\",\n  CATALAN: \"ca\",\n  CHINESE: \"zh\",\n  CORSICAN: \"co\",\n  CROATIAN: \"hr\",\n  CZECH: \"cs\",\n  DANISH: \"da\",\n  DUTCH: \"nl\",\n  ENGLISH: \"en\",\n  ESPERANTO: \"eo\",\n  ESTONIAN: \"et\",\n  FINNISH: \"fi\",\n  FRENCH: \"fr\",\n  FRISIAN: \"fy\",\n  GEORGIAN: \"ka\",\n  GERMAN: \"de\",\n  GREEK: \"el\",\n  HEBREW: \"he\",\n  HINDI: \"hi\",\n  HUNGARIAN: \"hu\",\n  ICELANDIC: \"is\",\n  INDONESIAN: \"id\",\n  IRISH: \"ga\",\n  ITALIAN: \"it\",\n  JAPANESE: \"ja\",\n  JAPANESE_HIRAGANA: \"ja-Hira\",\n  JAPANESE_KANA: \"ja_kana\",\n  JAPANESE_LATIN: \"ja_rm\",\n  JAPANESE_2018: \"ja-Latn\",\n  KANNADA: \"kn\",\n  KAZAKH: \"kk\",\n  KOREAN: \"ko\",\n  KOREAN_LATIN: \"ko-Latn\",\n  KURDISH: \"ku\",\n  ROMAN_LATIN: \"la\",\n  LATVIAN: \"lv\",\n  LITHUANIAN: \"lt\",\n  LUXEMBOURGISH: \"lb\",\n  MACEDONIAN: \"mk\",\n  MALAYALAM: \"ml\",\n  MALTESE: \"mt\",\n  NORWEGIAN: \"no\",\n  OCCITAN: \"oc\",\n  POLISH: \"pl\",\n  PORTUGUESE: \"pt\",\n  ROMANIAN: \"ro\",\n  ROMANSH: \"rm\",\n  RUSSIAN: \"ru\",\n  SCOTTISH_GAELIC: \"gd\",\n  SERBIAN_CYRILLIC: \"sr\",\n  SERBIAN_LATIN: \"sr-Latn\",\n  SLOVAK: \"sk\",\n  SLOVENE: \"sl\",\n  SPANISH: \"es\",\n  SWEDISH: \"sv\",\n  TAMIL: \"ta\",\n  TELUGU: \"te\",\n  THAI: \"th\",\n  TURKISH: \"tr\",\n  UKRAINIAN: \"uk\",\n  WELSH: \"cy\",\n} as const;\n\nconst languagesIsoSet = new Set(Object.values(Language) as Array<string>);\n\nfunction isLanguageSupported(lang: string): boolean {\n  return languagesIsoSet.has(lang);\n}\n\nconst languageCodeSet = new Set(Object.values(Language));\n\n/**\n * Type representing the key of the Language object\n */\ntype LanguageKey = keyof typeof Language;\n\ntype Values<T> = T[keyof T];\n\n/**\n * Built-in languages values as strings\n */\ntype LanguageString = Values<typeof Language>;\n\nfunction getBrowserLanguage(): LanguageString {\n  if (typeof navigator === \"undefined\") {\n    return Intl.DateTimeFormat()\n      .resolvedOptions()\n      .locale.split(\"-\")[0] as LanguageString;\n  }\n\n  const canditatelangs = Array.from(\n    new Set(navigator.languages.map((l) => l.split(\"-\")[0]))\n  ).filter((l) => languageCodeSet.has(l as LanguageString));\n\n  return canditatelangs.length\n    ? (canditatelangs[0] as LanguageString)\n    : Language.LATIN;\n}\n\nfunction setPrimaryLanguage(map: Map, lang: string) {\n  const layers = map.getStyle().layers;\n\n  // detects pattern like \"{name:somelanguage}\" with loose spacing\n  const strLanguageRegex = /^\\s*{\\s*name\\s*(:\\s*(\\S*))?\\s*}$/;\n\n  // detects pattern like \"name:somelanguage\" with loose spacing\n  const strLanguageInArrayRegex = /^\\s*name\\s*(:\\s*(\\S*))?\\s*$/;\n\n  // for string based bilingual lang such as \"{name:latin}  {name:nonlatin}\" or \"{name:latin}  {name}\"\n  const strBilingualRegex =\n    /^\\s*{\\s*name\\s*(:\\s*(\\S*))?\\s*}(\\s*){\\s*name\\s*(:\\s*(\\S*))?\\s*}$/;\n\n  // Regex to capture when there are more info, such as mountains elevation with unit m/ft\n  const strMoreInfoRegex = /^(.*)({\\s*name\\s*(:\\s*(\\S*))?\\s*})(.*)$/;\n\n  const langStr = lang ? `name:${lang}` : \"name\"; // to handle local lang\n  const replacer = [\n    \"case\",\n    [\"has\", langStr],\n    [\"get\", langStr],\n    [\"get\", \"name\"],\n  ];\n\n  for (let i = 0; i < layers.length; i += 1) {\n    const layer = layers[i] as SymbolLayerSpecification;\n    const layout = layer.layout;\n\n    if (!layout) {\n      continue;\n    }\n\n    if (!layout[\"text-field\"]) {\n      continue;\n    }\n\n    const textFieldLayoutProp = map.getLayoutProperty(layer.id, \"text-field\");\n\n    // Note:\n    // The value of the 'text-field' property can take multiple shape;\n    // 1. can be an array with 'concat' on its first element (most likely means bilingual)\n    // 2. can be an array with 'get' on its first element (monolingual)\n    // 3. can be a string of shape '{name:latin}'\n    // 4. can be a string referencing another prop such as '{housenumber}' or '{ref}'\n    //\n    // The case 1, 2 and 3 will be updated while maintaining their original type and shape.\n    // The case 3 will not be updated\n\n    let regexMatch;\n\n    // This is case 1\n    if (\n      Array.isArray(textFieldLayoutProp) &&\n      textFieldLayoutProp.length >= 2 &&\n      textFieldLayoutProp[0].trim().toLowerCase() === \"concat\"\n    ) {\n      const newProp = textFieldLayoutProp.slice(); // newProp is Array\n      // The style could possibly have defined more than 2 concatenated language strings but we only want to edit the first\n      // The style could also define that there are more things being concatenated and not only languages\n\n      for (let j = 0; j < textFieldLayoutProp.length; j += 1) {\n        const elem = textFieldLayoutProp[j];\n\n        // we are looking for an elem of shape '{name:somelangage}' (string) of `[\"get\", \"name:somelanguage\"]` (array)\n\n        // the entry of of shape '{name:somelangage}', possibly with loose spacing\n        if (\n          (typeof elem === \"string\" || elem instanceof String) &&\n          strLanguageRegex.exec(elem.toString())\n        ) {\n          newProp[j] = replacer;\n          break; // we just want to update the primary language\n        }\n        // the entry is of an array of shape `[\"get\", \"name:somelanguage\"]`\n        else if (\n          Array.isArray(elem) &&\n          elem.length >= 2 &&\n          elem[0].trim().toLowerCase() === \"get\" &&\n          strLanguageInArrayRegex.exec(elem[1].toString())\n        ) {\n          newProp[j] = replacer;\n          break; // we just want to update the primary language\n        } else if (\n          Array.isArray(elem) &&\n          elem.length === 4 &&\n          elem[0].trim().toLowerCase() === \"case\"\n        ) {\n          newProp[j] = replacer;\n          break; // we just want to update the primary language\n        }\n      }\n\n      map.setLayoutProperty(layer.id, \"text-field\", newProp);\n    }\n\n    // This is case 2\n    else if (\n      Array.isArray(textFieldLayoutProp) &&\n      textFieldLayoutProp.length >= 2 &&\n      textFieldLayoutProp[0].trim().toLowerCase() === \"get\" &&\n      strLanguageInArrayRegex.exec(textFieldLayoutProp[1].toString())\n    ) {\n      const newProp = replacer;\n      map.setLayoutProperty(layer.id, \"text-field\", newProp);\n    }\n\n    // This is case 3\n    else if (\n      (typeof textFieldLayoutProp === \"string\" ||\n        textFieldLayoutProp instanceof String) &&\n      strLanguageRegex.exec(textFieldLayoutProp.toString())\n    ) {\n      const newProp = replacer;\n      map.setLayoutProperty(layer.id, \"text-field\", newProp);\n    } else if (\n      Array.isArray(textFieldLayoutProp) &&\n      textFieldLayoutProp.length === 4 &&\n      textFieldLayoutProp[0].trim().toLowerCase() === \"case\"\n    ) {\n      const newProp = replacer;\n      map.setLayoutProperty(layer.id, \"text-field\", newProp);\n    } else if (\n      (typeof textFieldLayoutProp === \"string\" ||\n        textFieldLayoutProp instanceof String) &&\n      (regexMatch = strBilingualRegex.exec(textFieldLayoutProp.toString())) !==\n        null\n    ) {\n      const newProp = `{${langStr}}${regexMatch[3]}{name${\n        regexMatch[4] || \"\"\n      }}`;\n      map.setLayoutProperty(layer.id, \"text-field\", newProp);\n    } else if (\n      (typeof textFieldLayoutProp === \"string\" ||\n        textFieldLayoutProp instanceof String) &&\n      (regexMatch = strMoreInfoRegex.exec(textFieldLayoutProp.toString())) !==\n        null\n    ) {\n      const newProp = `${regexMatch[1]}{${langStr}}${regexMatch[5]}`;\n      map.setLayoutProperty(layer.id, \"text-field\", newProp);\n    }\n  }\n}\n\nfunction setSecondaryLanguage(map: Map, lang: string) {\n  const layers = map.getStyle().layers;\n\n  // detects pattern like \"{name:somelanguage}\" with loose spacing\n  const strLanguageRegex = /^\\s*{\\s*name\\s*(:\\s*(\\S*))?\\s*}$/;\n\n  // detects pattern like \"name:somelanguage\" with loose spacing\n  const strLanguageInArrayRegex = /^\\s*name\\s*(:\\s*(\\S*))?\\s*$/;\n\n  // for string based bilingual lang such as \"{name:latin}  {name:nonlatin}\" or \"{name:latin}  {name}\"\n  const strBilingualRegex =\n    /^\\s*{\\s*name\\s*(:\\s*(\\S*))?\\s*}(\\s*){\\s*name\\s*(:\\s*(\\S*))?\\s*}$/;\n\n  let regexMatch;\n\n  for (let i = 0; i < layers.length; i += 1) {\n    const layer = layers[i] as SymbolLayerSpecification;\n    const layout = layer.layout;\n\n    if (!layout) {\n      continue;\n    }\n\n    if (!layout[\"text-field\"]) {\n      continue;\n    }\n\n    const textFieldLayoutProp = map.getLayoutProperty(layer.id, \"text-field\");\n\n    let newProp;\n\n    // Note:\n    // The value of the 'text-field' property can take multiple shape;\n    // 1. can be an array with 'concat' on its first element (most likely means bilingual)\n    // 2. can be an array with 'get' on its first element (monolingual)\n    // 3. can be a string of shape '{name:latin}'\n    // 4. can be a string referencing another prop such as '{housenumber}' or '{ref}'\n    //\n    // Only the case 1 will be updated because we don't want to change the styling (read: add a secondary language where the original styling is only displaying 1)\n\n    // This is case 1\n    if (\n      Array.isArray(textFieldLayoutProp) &&\n      textFieldLayoutProp.length >= 2 &&\n      textFieldLayoutProp[0].trim().toLowerCase() === \"concat\"\n    ) {\n      newProp = textFieldLayoutProp.slice(); // newProp is Array\n      // The style could possibly have defined more than 2 concatenated language strings but we only want to edit the first\n      // The style could also define that there are more things being concatenated and not only languages\n\n      let languagesAlreadyFound = 0;\n\n      for (let j = 0; j < textFieldLayoutProp.length; j += 1) {\n        const elem = textFieldLayoutProp[j];\n\n        // we are looking for an elem of shape '{name:somelangage}' (string) of `[\"get\", \"name:somelanguage\"]` (array)\n\n        // the entry of of shape '{name:somelangage}', possibly with loose spacing\n        if (\n          (typeof elem === \"string\" || elem instanceof String) &&\n          strLanguageRegex.exec(elem.toString())\n        ) {\n          if (languagesAlreadyFound === 1) {\n            newProp[j] = `{name:${lang}}`;\n            break; // we just want to update the secondary language\n          }\n\n          languagesAlreadyFound += 1;\n        }\n        // the entry is of an array of shape `[\"get\", \"name:somelanguage\"]`\n        else if (\n          Array.isArray(elem) &&\n          elem.length >= 2 &&\n          elem[0].trim().toLowerCase() === \"get\" &&\n          strLanguageInArrayRegex.exec(elem[1].toString())\n        ) {\n          if (languagesAlreadyFound === 1) {\n            newProp[j][1] = `name:${lang}`;\n            break; // we just want to update the secondary language\n          }\n\n          languagesAlreadyFound += 1;\n        } else if (\n          Array.isArray(elem) &&\n          elem.length === 4 &&\n          elem[0].trim().toLowerCase() === \"case\"\n        ) {\n          if (languagesAlreadyFound === 1) {\n            newProp[j] = [\"get\", `name:${lang}`]; // the situation with 'case' is supposed to only happen with the primary lang\n            break; // but in case a styling also does that for secondary...\n          }\n\n          languagesAlreadyFound += 1;\n        }\n      }\n\n      map.setLayoutProperty(layer.id, \"text-field\", newProp);\n    }\n\n    // the language (both first and second) are defined into a single string model\n    else if (\n      (typeof textFieldLayoutProp === \"string\" ||\n        textFieldLayoutProp instanceof String) &&\n      (regexMatch = strBilingualRegex.exec(textFieldLayoutProp.toString())) !==\n        null\n    ) {\n      const langStr = lang ? `name:${lang}` : \"name\"; // to handle local lang\n      newProp = `{name${regexMatch[1] || \"\"}}${regexMatch[3]}{${langStr}}`;\n      map.setLayoutProperty(layer.id, \"text-field\", newProp);\n    }\n  }\n}\n\nexport {\n  Language,\n  getBrowserLanguage,\n  isLanguageSupported,\n  setPrimaryLanguage,\n  setSecondaryLanguage,\n};\n\nexport type { LanguageString, LanguageKey };\n","import {\n\tdefineComponent,\n\tgetCurrentInstance,\n\th,\n\tmarkRaw,\n\tnextTick,\n\tonBeforeUnmount,\n\tonMounted,\n\tPropType,\n\tprovide,\n\tref,\n\tshallowRef,\n\tSlotsType,\n\ttoRef,\n\tunref,\n\twatch\n} from 'vue';\nimport {\n\tFitBoundsOptions,\n\tGestureOptions,\n\tLngLatBoundsLike,\n\tLngLatLike,\n\tMap as MaplibreMap,\n\tMapOptions,\n\tRequestTransformFunction,\n\tStyleSpecification\n} from 'maplibre-gl';\nimport { componentIdSymbol, emitterSymbol, isInitializedSymbol, isLoadedSymbol, mapSymbol, MglEvents, sourceIdSymbol, ValidLanguages } from '@/lib/types';\nimport { defaults } from '@/lib/defaults';\nimport { MapLib } from '@/lib/lib/map.lib';\nimport { Position } from '@/lib/components/controls/position.enum';\nimport mitt from 'mitt';\nimport { registerMap } from '@/lib/lib/mapRegistry';\nimport { debounce } from '@/lib/lib/debounce';\nimport { setPrimaryLanguage } from 'modular-maptiler-sdk/src/language';\n\nexport default /*#__PURE__*/ defineComponent({\n\tname : 'MglMap',\n\tprops: {\n\t\twidth                       : { type: [ Number, String ] as PropType<number | string>, default: '100%' },\n\t\theight                      : { type: [ Number, String ] as PropType<number | string>, default: '100%' },\n\t\tantialias                   : { type: Boolean as PropType<boolean>, default: () => defaults.antialias },\n\t\tattributionControl          : { type: Boolean as PropType<boolean>, default: () => defaults.attributionControl },\n\t\tbearing                     : { type: Number as PropType<number>, default: () => defaults.bearing },\n\t\tbearingSnap                 : { type: Number as PropType<number>, default: () => defaults.bearingSnap },\n\t\tbounds                      : { type: [ Array, Object ] as PropType<LngLatBoundsLike>, default: () => defaults.bounds },\n\t\tboxZoom                     : { type: Boolean as PropType<boolean>, default: () => defaults.boxZoom },\n\t\tcenter                      : { type: [ Array, Object ] as PropType<LngLatLike>, default: () => defaults.center },\n\t\tclickTolerance              : { type: Number as PropType<number>, default: () => defaults.clickTolerance },\n\t\tcollectResourceTiming       : { type: Boolean as PropType<boolean>, default: () => defaults.collectResourceTiming },\n\t\tcrossSourceCollisions       : { type: Boolean as PropType<boolean>, default: () => defaults.crossSourceCollisions },\n\t\tcustomAttribution           : { type: [ String, Array ] as PropType<string | string[]>, default: () => defaults.customAttribution },\n\t\tdragPan                     : { type: Boolean as PropType<boolean>, default: () => defaults.dragPan },\n\t\tdragRotate                  : { type: Boolean as PropType<boolean>, default: () => defaults.dragRotate },\n\t\tdoubleClickZoom             : { type: Boolean as PropType<boolean>, default: () => defaults.doubleClickZoom },\n\t\thash                        : { type: [ Boolean, String ] as PropType<boolean | string>, default: () => defaults.hash },\n\t\tfadeDuration                : { type: Number as PropType<number>, default: () => defaults.fadeDuration },\n\t\tfailIfMajorPerformanceCaveat: { type: Boolean as PropType<boolean>, default: () => defaults.failIfMajorPerformanceCaveat },\n\t\tfitBoundsOptions            : { type: Object as PropType<FitBoundsOptions>, default: () => defaults.fitBoundsOptions },\n\t\tinteractive                 : { type: Boolean as PropType<boolean>, default: () => defaults.interactive },\n\t\tkeyboard                    : { type: Boolean as PropType<boolean>, default: () => defaults.keyboard },\n\t\tlocale                      : { type: Object as PropType<Record<string, string>>, default: () => defaults.locale },\n\t\tlanguage                    : { type: String as PropType<ValidLanguages | null>, default: () => defaults.language || null },\n\t\tlocalIdeographFontFamily    : { type: String as PropType<string>, default: () => defaults.localIdeographFontFamily },\n\t\tlogoPosition                : {\n\t\t\ttype     : [ String ] as PropType<Position>,\n\t\t\tvalidator: (val: any) => val in Position,\n\t\t\tdefault  : () => defaults.logoPosition,\n\t\t},\n\t\tmaxBounds                   : { type: [ Array, Object ] as PropType<LngLatBoundsLike>, default: () => defaults.maxBounds },\n\t\tmaxPitch                    : { type: Number as PropType<number>, default: () => defaults.maxPitch },\n\t\tmaxZoom                     : { type: Number as PropType<number>, default: () => defaults.maxZoom },\n\t\tminPitch                    : { type: Number as PropType<number>, default: () => defaults.minPitch },\n\t\tminZoom                     : { type: Number as PropType<number>, default: () => defaults.minZoom },\n\t\tpreserveDrawingBuffer       : { type: Boolean as PropType<boolean>, default: () => defaults.preserveDrawingBuffer },\n\t\tpitch                       : { type: Number as PropType<number>, default: () => defaults.pitch },\n\t\tpitchWithRotate             : { type: Boolean as PropType<boolean>, default: () => defaults.pitchWithRotate },\n\t\trefreshExpiredTiles         : { type: Boolean as PropType<boolean>, default: () => defaults.refreshExpiredTiles },\n\t\trenderWorldCopies           : { type: Boolean as PropType<boolean>, default: () => defaults.renderWorldCopies },\n\t\tscrollZoom                  : { type: Boolean as PropType<boolean>, default: () => defaults.scrollZoom },\n\t\t// StyleSpecification triggers TS7056, so users must handle typings themselves\n\t\tmapStyle           : { type: [ String, Object ] as PropType<object | string>, default: () => defaults.style },\n\t\ttrackResize        : { type: Boolean as PropType<boolean>, default: () => defaults.trackResize },\n\t\ttransformRequest   : { type: Function as PropType<RequestTransformFunction>, default: defaults.transformRequest },\n\t\ttouchZoomRotate    : { type: Boolean as PropType<boolean>, default: () => defaults.touchZoomRotate },\n\t\ttouchPitch         : { type: Boolean as PropType<boolean>, default: () => defaults.touchPitch },\n\t\tzoom               : { type: Number as PropType<number>, default: () => defaults.zoom },\n\t\tmaxTileCacheSize   : { type: Number as PropType<number>, default: () => defaults.maxTileCacheSize },\n\t\tmapKey             : { type: [ String, Symbol ] as PropType<string | symbol> },\n\t\tpixelRatio         : { type: Number as PropType<number>, default: () => defaults.pixelRatio },\n\t\tcooperativeGestures: { type: [ Boolean, Object ] as PropType<boolean | GestureOptions>, default: () => defaults.cooperativeGestures }\n\t},\n\temits: [\n\t\t'map:error', 'map:load', 'map:idle', 'map:remove', 'map:render', 'map:resize', 'map:webglcontextlost', 'map:webglcontextrestored', 'map:dataloading',\n\t\t'map:data', 'map:tiledataloading', 'map:sourcedataloading', 'map:styledataloading', 'map:sourcedata', 'map:styledata', 'map:boxzoomcancel',\n\t\t'map:boxzoomstart', 'map:boxzoomend', 'map:touchcancel', 'map:touchmove', 'map:touchend', 'map:touchstart', 'map:click', 'map:contextmenu',\n\t\t'map:dblclick', 'map:mousemove', 'map:mouseup', 'map:mousedown', 'map:mouseout', 'map:mouseover', 'map:movestart', 'map:move', 'map:moveend',\n\t\t'map:zoomstart', 'map:zoom', 'map:zoomend', 'map:rotatestart', 'map:rotate', 'map:rotateend', 'map:dragstart', 'map:drag', 'map:dragend',\n\t\t'map:pitchstart', 'map:pitch', 'map:pitchend', 'map:wheel'\n\t],\n\tslots: Object as SlotsType<{ default: {} }>,\n\tsetup(props, ctx) {\n\n\t\tconst component      = markRaw(getCurrentInstance()!),\n\t\t\t  container      = shallowRef<HTMLDivElement>(),\n\t\t\t  map            = shallowRef<MaplibreMap>(),\n\t\t\t  isInitialized  = ref(false),\n\t\t\t  isLoaded       = ref(false),\n\t\t\t  isStyleReady   = ref(false),\n\t\t\t  boundMapEvents = new Map<string, Function>(),\n\t\t\t  emitter        = mitt<MglEvents>(),\n\t\t\t  registryItem   = registerMap(component as any, map, props.mapKey);\n\n\t\tlet resizeObserver: ResizeObserver | undefined;\n\n\t\tprovide(mapSymbol, map);\n\t\tprovide(isLoadedSymbol, isLoaded);\n\t\tprovide(isInitializedSymbol, isInitialized);\n\t\tprovide(componentIdSymbol, component.uid);\n\t\tprovide(sourceIdSymbol, '');\n\t\tprovide(emitterSymbol, emitter);\n\n\t\t/*\n\t\t * bind prop watchers\n\t\t */\n\t\twatch(toRef(props, 'bearing'), v => {\n\t\t\tif (v) {\n\t\t\t\tmap.value?.setBearing(v);\n\t\t\t}\n\t\t});\n\t\twatch(toRef(props, 'bounds'), v => {\n\t\t\tif (v) {\n\t\t\t\tmap.value?.fitBounds(v, props.fitBoundsOptions);\n\t\t\t}\n\t\t});\n\t\twatch(toRef(props, 'center'), v => {\n\t\t\tif (v) {\n\t\t\t\tmap.value?.setCenter(v);\n\t\t\t}\n\t\t});\n\t\twatch(toRef(props, 'maxBounds'), v => {\n\t\t\tif (v) {\n\t\t\t\tmap.value?.setMaxBounds(v);\n\t\t\t}\n\t\t});\n\t\twatch(toRef(props, 'maxPitch'), v => {\n\t\t\tif (v) {\n\t\t\t\tmap.value?.setMaxPitch(v);\n\t\t\t}\n\t\t});\n\t\twatch(toRef(props, 'maxZoom'), v => {\n\t\t\tif (v) {\n\t\t\t\tmap.value?.setMaxZoom(v);\n\t\t\t}\n\t\t});\n\t\twatch(toRef(props, 'minPitch'), v => {\n\t\t\tif (v) {\n\t\t\t\tmap.value?.setMinPitch(v);\n\t\t\t}\n\t\t});\n\t\twatch(toRef(props, 'minZoom'), v => {\n\t\t\tif (v) {\n\t\t\t\tmap.value?.setMinZoom(v);\n\t\t\t}\n\t\t});\n\t\twatch(toRef(props, 'pitch'), v => {\n\t\t\tif (v) {\n\t\t\t\tmap.value?.setPitch(v);\n\t\t\t}\n\t\t});\n\t\twatch(toRef(props, 'renderWorldCopies'), v => {\n\t\t\tif (v) {\n\t\t\t\tmap.value?.setRenderWorldCopies(v);\n\t\t\t}\n\t\t});\n\t\twatch(toRef(props, 'mapStyle'), v => {\n\t\t\tif (v) {\n\t\t\t\tmap.value?.setStyle(v as StyleSpecification);\n\t\t\t}\n\t\t});\n\t\twatch(toRef(props, 'transformRequest'), v => {\n\t\t\tif (v) {\n\t\t\t\tmap.value?.setTransformRequest(v);\n\t\t\t}\n\t\t});\n\t\twatch(toRef(props, 'zoom'), v => {\n\t\t\tif (v) {\n\t\t\t\tmap.value?.setZoom(v);\n\t\t\t}\n\t\t});\n\t\twatch(toRef(props, 'zoom'), v => {\n\t\t\tif (v) {\n\t\t\t\tmap.value?.setZoom(v);\n\t\t\t}\n\t\t});\n\t\twatch(toRef(props, 'language'), v => {\n\t\t\tif (isStyleReady.value && map.value && registryItem.language !== (v || null)) {\n\t\t\t\tsetPrimaryLanguage(map.value as any, v || '');\n\t\t\t\tregistryItem.language = v || null;\n\t\t\t}\n\t\t});\n\t\twatch(toRef(registryItem, 'language'), v => {\n\t\t\tif (isStyleReady.value && map.value) {\n\t\t\t\tsetPrimaryLanguage(map.value as any, v || '');\n\t\t\t}\n\t\t});\n\n\t\tfunction onStyleReady() {\n\t\t\tisStyleReady.value = true;\n\t\t\tif (props.language) {\n\t\t\t\tregistryItem.language = props.language;\n\t\t\t} else if (registryItem.language) {\n\t\t\t\tsetPrimaryLanguage(map.value! as any, props.language || '');\n\t\t\t}\n\t\t}\n\n\t\tfunction initialize() {\n\n\t\t\tregistryItem.isMounted = true;\n\n\t\t\t// build options\n\t\t\tconst opts: MapOptions = Object.keys(props)\n\t\t\t\t\t\t\t\t\t\t   .filter(opt => (props as any)[ opt ] !== undefined && MapLib.MAP_OPTION_KEYS.indexOf(opt as keyof MapOptions) !== -1)\n\t\t\t\t\t\t\t\t\t\t   .reduce<MapOptions>((obj, opt) => {\n\t\t\t\t\t\t\t\t\t\t\t   (obj as any)[ opt === 'mapStyle' ? 'style' : opt ] = unref((props as any)[ opt ]);\n\t\t\t\t\t\t\t\t\t\t\t   return obj;\n\t\t\t\t\t\t\t\t\t\t   }, { container: container.value as HTMLDivElement } as any);\n\n\t\t\t// init map\n\t\t\tmap.value           = markRaw(new MaplibreMap(opts));\n\t\t\tregistryItem.map    = map.value;\n\t\t\tisInitialized.value = true;\n\t\t\tboundMapEvents.set('__load', () => (isLoaded.value = true, registryItem.isLoaded = true));\n\t\t\tmap.value.once('styledata', onStyleReady);\n\t\t\tmap.value.on('load', boundMapEvents.get('__load') as any);\n\n\t\t\t// bind events\n\t\t\tif (component.vnode.props) {\n\t\t\t\tfor (let i = 0, len = MapLib.MAP_EVENT_TYPES.length; i < len; i++) {\n\t\t\t\t\tif (component.vnode.props[ 'onMap:' + MapLib.MAP_EVENT_TYPES[ i ] ]) {\n\t\t\t\t\t\tconst handler = MapLib.createEventHandler(component as any, map.value, ctx as any, 'map:' + MapLib.MAP_EVENT_TYPES[ i ]);\n\t\t\t\t\t\tboundMapEvents.set(MapLib.MAP_EVENT_TYPES[ i ], handler);\n\t\t\t\t\t\tmap.value.on(MapLib.MAP_EVENT_TYPES[ i ], handler);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// automatic re-initialization of map on CONTEXT_LOST_WEBGL\n\t\t\tmap.value.getCanvas().addEventListener('webglcontextlost', restart);\n\n\t\t}\n\n\t\tasync function dispose() {\n\n\t\t\tregistryItem.isMounted = false;\n\t\t\tregistryItem.isLoaded  = false;\n\t\t\tisLoaded.value         = false;\n\n\t\t\tif (map.value) {\n\t\t\t\t// unbind events\n\t\t\t\tmap.value.getCanvas().removeEventListener('webglcontextlost', restart);\n\t\t\t\tmap.value._controls.forEach((control) => {\n\t\t\t\t\tmap.value!.removeControl(control);\n\t\t\t\t});\n\t\t\t\tisInitialized.value = false;\n\t\t\t\tboundMapEvents.forEach((func, en) => {\n\t\t\t\t\tmap.value!.off(en.startsWith('__') ? en.substring(2) : en, func as any);\n\t\t\t\t});\n\t\t\t\t// destroy map\n\t\t\t\tmap.value.remove();\n\t\t\t}\n\n\t\t}\n\n\t\tfunction restart() {\n\t\t\tdispose();\n\t\t\tnextTick(initialize);\n\t\t}\n\n\t\t/*\n\t\t * init map\n\t\t */\n\t\tonMounted(() => {\n\n\t\t\tinitialize();\n\n\t\t\t// bind resize observer\n\t\t\tif (map.value) {\n\t\t\t\tresizeObserver = new ResizeObserver(debounce(map.value.resize.bind(map.value), 100));\n\t\t\t\tresizeObserver.observe(container.value as HTMLDivElement);\n\t\t\t}\n\n\t\t});\n\n\t\t/*\n\t\t * Dispose component\n\t\t */\n\t\tonBeforeUnmount(() => {\n\n\t\t\t// unbind resize observer\n\t\t\tif (resizeObserver !== undefined) {\n\t\t\t\tresizeObserver.disconnect();\n\t\t\t\tresizeObserver = undefined;\n\t\t\t}\n\n\t\t\tdispose();\n\n\t\t});\n\n\t\tctx.expose({ map });\n\n\t\treturn () => h(\n\t\t\t'div',\n\t\t\t{\n\t\t\t\t'class': 'mgl-container',\n\t\t\t\tstyle  : { height: props.height, width: props.width }\n\t\t\t},\n\t\t\t[\n\t\t\t\th('div', { ref: container, 'class': 'mgl-wrapper' }),\n\t\t\t\tisInitialized.value && ctx.slots.default ? ctx.slots.default({}) : undefined\n\t\t\t]\n\t\t);\n\n\t}\n});\n","import { WatchSource } from '@vue/runtime-core';\nimport { ShallowRef, watch } from 'vue';\nimport { IControl, Map } from 'maplibre-gl';\nimport { Position, PositionProp, PositionValues } from '@/lib/components/controls/position.enum';\n\nexport function usePositionWatcher(source: WatchSource<PositionProp | undefined>, map: ShallowRef<Map | undefined>, control: IControl) {\n\twatch(source, (v) => {\n\t\tif (v && PositionValues.indexOf(v as Position) === -1) {\n\t\t\treturn;\n\t\t}\n\t\tif (map.value?.hasControl(control)) {\n\t\t\tmap.value.removeControl(control);\n\t\t}\n\t\tmap.value?.addControl(control, v);\n\t}, { immediate: true });\n}","import { defineComponent, inject, onBeforeUnmount, PropType, toRef } from 'vue';\nimport { AttributionControl } from 'maplibre-gl';\nimport { Position, PositionProp, PositionValues } from '@/lib/components/controls/position.enum';\nimport { isInitializedSymbol, mapSymbol } from '@/lib/types';\nimport { usePositionWatcher } from '@/lib/composable/usePositionWatcher';\n\n\nexport default /*#__PURE__*/ defineComponent({\n\tname : 'MglAttributionControl',\n\tprops: {\n\t\tposition         : {\n\t\t\ttype     : String as PropType<PositionProp>,\n\t\t\tvalidator: (v: Position) => {\n\t\t\t\treturn PositionValues.indexOf(v) !== -1;\n\t\t\t}\n\t\t},\n\t\tcompact          : Boolean as PropType<boolean>,\n\t\tcustomAttribution: [ String, Array ] as PropType<string | string[]>\n\t},\n\tsetup(props) {\n\n\t\tconst map           = inject(mapSymbol)!,\n\t\t\t  isInitialized = inject(isInitializedSymbol)!,\n\t\t\t  control       = new AttributionControl({ compact: props.compact, customAttribution: props.customAttribution });\n\n\t\tusePositionWatcher(toRef(props, 'position'), map, control);\n\t\tonBeforeUnmount(() => isInitialized.value && map.value!.removeControl(control));\n\n\t},\n\trender() {\n\t\t// nothing\n\t}\n});\n","import { createCommentVNode, defineComponent, h, inject, nextTick, onBeforeUnmount, PropType, ref, Ref, SlotsType, Teleport, toRef, watch } from 'vue';\nimport { Position, PositionProp, PositionValues } from '@/lib/components/controls/position.enum';\nimport { ControlPosition, IControl } from 'maplibre-gl';\nimport { isInitializedSymbol, mapSymbol } from '@/lib/types';\nimport { usePositionWatcher } from '@/lib/composable/usePositionWatcher';\n\n\nexport class CustomControl implements IControl {\n\n\tpublic static readonly CONTROL_CLASS       = 'maplibregl-ctrl';\n\tpublic static readonly CONTROL_GROUP_CLASS = 'maplibregl-ctrl-group';\n\n\tpublic readonly container: HTMLDivElement;\n\n\tconstructor(private isAdded: Ref<boolean>, noClasses: boolean) {\n\t\tthis.container = document.createElement('div');\n\t\tthis.setClasses(noClasses);\n\t}\n\n\tgetDefaultPosition(): ControlPosition {\n\t\treturn Position.TOP_LEFT;\n\t}\n\n\tonAdd(): HTMLElement {\n\t\tnextTick(() => this.isAdded.value = true);\n\t\treturn this.container;\n\t}\n\n\tonRemove(): void {\n\t\tthis.isAdded.value = false;\n\t\tthis.container.remove();\n\t}\n\n\tsetClasses(noClasses: boolean) {\n\t\tif (noClasses) {\n\t\t\tthis.container.classList.remove(CustomControl.CONTROL_CLASS);\n\t\t\tthis.container.classList.remove(CustomControl.CONTROL_GROUP_CLASS);\n\t\t} else {\n\t\t\tthis.container.classList.add(CustomControl.CONTROL_CLASS);\n\t\t\tthis.container.classList.add(CustomControl.CONTROL_GROUP_CLASS);\n\t\t}\n\t}\n\n}\n\nexport default /*#__PURE__*/ defineComponent({\n\tname : 'MglCustomControl',\n\tprops: {\n\t\tposition : {\n\t\t\ttype     : String as PropType<PositionProp>,\n\t\t\tvalidator: (v: Position) => {\n\t\t\t\treturn PositionValues.indexOf(v) !== -1;\n\t\t\t}\n\t\t},\n\t\tnoClasses: {\n\t\t\ttype   : Boolean as PropType<boolean>,\n\t\t\tdefault: false\n\t\t}\n\t},\n\tslots: Object as SlotsType<{ default: {} }>,\n\tsetup(props, { slots }) {\n\n\t\tconst map           = inject(mapSymbol)!,\n\t\t\t  isInitialized = inject(isInitializedSymbol)!,\n\t\t\t  isAdded       = ref(false),\n\t\t\t  control       = new CustomControl(isAdded, props.noClasses!);\n\n\t\tusePositionWatcher(toRef(props, 'position'), map, control);\n\t\twatch(toRef(props, 'noClasses'), v => control.setClasses(v!));\n\t\tonBeforeUnmount(() => isInitialized.value && map.value?.removeControl(control));\n\n\t\treturn () => {\n\t\t\tif (!isAdded.value) {\n\t\t\t\treturn createCommentVNode('custom-component');\n\t\t\t}\n\t\t\treturn h(\n\t\t\t\tTeleport as any,\n\t\t\t\t{ to: control.container },\n\t\t\t\tslots.default?.({})\n\t\t\t);\n\t\t};\n\n\t}\n});\n","import { defineComponent, inject, nextTick, onBeforeUnmount, PropType, toRef } from 'vue';\nimport { Position, PositionProp, PositionValues } from '@/lib/components/controls/position.enum';\nimport { isInitializedSymbol, mapSymbol } from '@/lib/types';\nimport { FullscreenControl } from 'maplibre-gl';\nimport { usePositionWatcher } from '@/lib/composable/usePositionWatcher';\n\nexport default /*#__PURE__*/ defineComponent({\n\tname : 'MglFullscreenControl',\n\tprops: {\n\t\tposition : {\n\t\t\ttype     : String as PropType<PositionProp>,\n\t\t\tdefault  : Position.TOP_RIGHT,\n\t\t\tvalidator: (v: Position) => {\n\t\t\t\treturn PositionValues.indexOf(v) !== -1;\n\t\t\t}\n\t\t},\n\t\tcontainer: {\n\t\t\ttype   : Object as PropType<HTMLElement>,\n\t\t\tdefault: null\n\t\t}\n\t},\n\tsetup(props) {\n\n\t\tconst map           = inject(mapSymbol)!,\n\t\t\t  isInitialized = inject(isInitializedSymbol)!,\n\t\t\t  control       = new FullscreenControl({ container: props.container || undefined });\n\n\t\t// fire map.resize just a 2nd time\n\t\tfunction triggerResize() {\n\t\t\tnextTick(() => map.value?.resize());\n\t\t}\n\n\t\tcontrol.on('fullscreenstart', triggerResize);\n\t\tcontrol.on('fullscreenend', triggerResize);\n\n\t\tusePositionWatcher(toRef(props, 'position'), map, control);\n\t\tonBeforeUnmount(() => {\n\t\t\tcontrol.off('fullscreenstart', triggerResize);\n\t\t\tcontrol.off('fullscreenend', triggerResize);\n\t\t\tisInitialized.value && map.value?.removeControl(control);\n\t\t});\n\n\t},\n\trender() {\n\t\t// nothing\n\t}\n});\n","import { defineComponent, inject, onBeforeUnmount, PropType, toRef } from 'vue';\nimport { IControl, Map as MMap } from 'maplibre-gl';\nimport { Position, PositionProp, PositionValues } from '@/lib/components/controls/position.enum';\nimport { isInitializedSymbol, mapSymbol } from '@/lib/types';\nimport { usePositionWatcher } from '@/lib/composable/usePositionWatcher';\n\nexport class FrameRateControl implements IControl {\n\n\tprivate frames      = 0;\n\tprivate totalTime   = 0;\n\tprivate totalFrames = 0;\n\n\tprivate time: number | null = null;\n\tprivate map?: MMap;\n\tprivate container?: HTMLDivElement;\n\tprivate readOutput?: HTMLDivElement;\n\tprivate canvas?: HTMLCanvasElement;\n\n\tprivate eventHandlers = new Map<string, Function>();\n\n\tconstructor(private background  = 'rgba(0,0,0,0.9)',\n\t\t\t\tprivate barWidth    = 4 * window.devicePixelRatio,\n\t\t\t\tprivate color       = '#7cf859',\n\t\t\t\tprivate font        = 'Monaco, Consolas, Courier, monospace',\n\t\t\t\tprivate graphHeight = 60 * window.devicePixelRatio,\n\t\t\t\tprivate graphWidth  = 90 * window.devicePixelRatio,\n\t\t\t\tprivate graphTop    = 0,\n\t\t\t\tprivate graphRight  = 5 * window.devicePixelRatio,\n\t\t\t\tprivate width       = 100 * window.devicePixelRatio) {\n\t}\n\n\tgetDefaultPosition(): Position {\n\t\treturn Position.TOP_RIGHT;\n\t}\n\n\tonAdd(map: MMap): HTMLElement {\n\t\tthis.map = map;\n\n\t\tconst el     = (this.container = document.createElement('div'));\n\t\tel.className = 'maplibregl-ctrl maplibregl-ctrl-fps';\n\n\t\tel.style.backgroundColor = this.background;\n\t\tel.style.borderRadius    = '6px';\n\n\t\tthis.readOutput                  = document.createElement('div');\n\t\tthis.readOutput.style.color      = this.color;\n\t\tthis.readOutput.style.fontFamily = this.font;\n\t\tthis.readOutput.style.padding    = '0 5px 5px';\n\t\tthis.readOutput.style.fontSize   = '9px';\n\t\tthis.readOutput.style.fontWeight = 'bold';\n\t\tthis.readOutput.textContent      = 'Waiting…';\n\n\t\tthis.canvas               = document.createElement('canvas');\n\t\tthis.canvas.className     = 'maplibregl-ctrl-canvas';\n\t\tthis.canvas.width         = this.width;\n\t\tthis.canvas.height        = this.graphHeight;\n\t\tthis.canvas.style.cssText = `width: ${this.width / window.devicePixelRatio}px; height: ${this.graphHeight / window.devicePixelRatio}px;`;\n\n\t\tel.appendChild(this.readOutput);\n\t\tel.appendChild(this.canvas);\n\n\t\tthis.eventHandlers.set('movestart', this.onMoveStart.bind(this));\n\t\tthis.eventHandlers.set('moveend', this.onMoveEnd.bind(this));\n\t\tthis.map.on('movestart', this.eventHandlers.get('movestart') as any);\n\t\tthis.map.on('moveend', this.eventHandlers.get('moveend') as any);\n\t\treturn this.container;\n\t}\n\n\tonRemove(): void {\n\t\tthis.map!.off('movestart', this.eventHandlers.get('movestart') as any);\n\t\tthis.map!.off('moveend', this.eventHandlers.get('moveend') as any);\n\t\tthis.eventHandlers.clear();\n\t\tthis.container!.parentNode!.removeChild(this.container!);\n\t\tthis.map = undefined;\n\t}\n\n\tonMoveStart() {\n\t\tthis.frames = 0;\n\t\tthis.time   = performance.now();\n\t\tthis.eventHandlers.set('render', this.onRender.bind(this));\n\t\tthis.map!.on('render', this.eventHandlers.get('render') as any);\n\t}\n\n\tonMoveEnd() {\n\t\tconst now = performance.now();\n\t\tthis.updateGraph(this.getFPS(now));\n\t\tthis.frames = 0;\n\t\tthis.time   = null;\n\t\tthis.map!.off('render', this.eventHandlers.get('render') as any);\n\t}\n\n\tonRender() {\n\t\tif (this.time) {\n\t\t\tthis.frames++;\n\t\t\tconst now = performance.now();\n\t\t\tif (now >= this.time + 1e3) {\n\t\t\t\tthis.updateGraph(this.getFPS(now));\n\t\t\t\tthis.frames = 0;\n\t\t\t\tthis.time   = performance.now();\n\t\t\t}\n\t\t}\n\t}\n\n\tgetFPS(now: number) {\n\t\tthis.totalTime += now - this.time!;\n\t\tthis.totalFrames += this.frames;\n\t\treturn Math.round((1e3 * this.frames) / (now - this.time!)) || 0;\n\t}\n\n\tupdateGraph(fpsNow: number) {\n\t\tconst context = this.canvas!.getContext('2d')!;\n\t\tconst fps     = Math.round((1e3 * this.totalFrames) / this.totalTime) || 0;\n\t\tconst rect    = (this.graphHeight, this.barWidth);\n\n\t\tcontext.fillStyle   = this.background;\n\t\tcontext.globalAlpha = 1;\n\t\tcontext.fillRect(0, 0, this.graphWidth, this.graphTop);\n\t\tcontext.fillStyle = this.color;\n\n\t\tthis.readOutput!.textContent = `${fpsNow} FPS (${fps} Avg)`;\n\t\tcontext.drawImage(\n\t\t\tthis.canvas!,\n\t\t\tthis.graphRight + rect,\n\t\t\tthis.graphTop,\n\t\t\tthis.graphWidth - rect,\n\t\t\tthis.graphHeight,\n\t\t\tthis.graphRight,\n\t\t\tthis.graphTop,\n\t\t\tthis.graphWidth - rect,\n\t\t\tthis.graphHeight\n\t\t);\n\t\tcontext.fillRect(\n\t\t\tthis.graphRight + this.graphWidth - rect,\n\t\t\tthis.graphTop,\n\t\t\trect,\n\t\t\tthis.graphHeight\n\t\t);\n\t\tcontext.fillStyle   = this.background;\n\t\tcontext.globalAlpha = 0.75;\n\t\tcontext.fillRect(\n\t\t\tthis.graphRight + this.graphWidth - rect,\n\t\t\tthis.graphTop,\n\t\t\trect,\n\t\t\t(1 - fpsNow / 100) * this.graphHeight\n\t\t);\n\t}\n\n}\n\nexport default /*#__PURE__*/ defineComponent({\n\tname : 'MglFrameRateControl',\n\tprops: {\n\t\tposition   : {\n\t\t\ttype     : String as PropType<PositionProp>,\n\t\t\tvalidator: (v: Position) => {\n\t\t\t\treturn PositionValues.indexOf(v) !== -1;\n\t\t\t}\n\t\t},\n\t\tbackground : {\n\t\t\ttype   : String as PropType<string>,\n\t\t\tdefault: 'rgba(0,0,0,0.9)'\n\t\t},\n\t\tbarWidth   : {\n\t\t\ttype   : Number as PropType<number>,\n\t\t\tdefault: 4 * window.devicePixelRatio\n\t\t},\n\t\tcolor      : {\n\t\t\ttype   : String as PropType<string>,\n\t\t\tdefault: '#7cf859'\n\t\t},\n\t\tfont       : {\n\t\t\ttype   : String as PropType<string>,\n\t\t\tdefault: 'Monaco, Consolas, Courier, monospace'\n\t\t},\n\t\tgraphHeight: {\n\t\t\ttype   : Number as PropType<number>,\n\t\t\tdefault: 60 * window.devicePixelRatio\n\t\t},\n\t\tgraphWidth : {\n\t\t\ttype   : Number as PropType<number>,\n\t\t\tdefault: 90 * window.devicePixelRatio\n\t\t},\n\t\tgraphTop   : {\n\t\t\ttype   : Number as PropType<number>,\n\t\t\tdefault: 0\n\t\t},\n\t\tgraphRight : {\n\t\t\ttype   : Number as PropType<number>,\n\t\t\tdefault: 5 * window.devicePixelRatio\n\t\t},\n\t\twidth      : {\n\t\t\ttype   : Number as PropType<number>,\n\t\t\tdefault: 100 * window.devicePixelRatio\n\t\t}\n\t},\n\tsetup(props) {\n\n\t\tconst map           = inject(mapSymbol)!,\n\t\t\t  isInitialized = inject(isInitializedSymbol)!,\n\t\t\t  control       = new FrameRateControl(\n\t\t\t\t  props.background,\n\t\t\t\t  props.barWidth,\n\t\t\t\t  props.color,\n\t\t\t\t  props.font,\n\t\t\t\t  props.graphHeight,\n\t\t\t\t  props.graphWidth,\n\t\t\t\t  props.graphTop,\n\t\t\t\t  props.graphRight,\n\t\t\t\t  props.width\n\t\t\t  );\n\n\t\tusePositionWatcher(toRef(props, 'position'), map, control);\n\t\tonBeforeUnmount(() => isInitialized.value && map.value?.removeControl(control));\n\n\t},\n\trender() {\n\t\t// nothing\n\t}\n});\n","import { defineComponent, inject, onBeforeUnmount, PropType, toRef } from 'vue';\nimport { Position, PositionProp, PositionValues } from '@/lib/components/controls/position.enum';\nimport { isInitializedSymbol, mapSymbol } from '@/lib/types';\nimport { FitBoundsOptions, GeolocateControl } from 'maplibre-gl';\nimport { usePositionWatcher } from '@/lib/composable/usePositionWatcher';\n\nexport default /*#__PURE__*/ defineComponent({\n\tname : 'MglGeolocationControl',\n\tprops: {\n\t\tposition          : {\n\t\t\ttype     : String as PropType<PositionProp>,\n\t\t\tdefault  : Position.TOP_RIGHT,\n\t\t\tvalidator: (v: Position) => {\n\t\t\t\treturn PositionValues.indexOf(v) !== -1;\n\t\t\t}\n\t\t},\n\t\tpositionOptions   : {\n\t\t\ttype   : Object as PropType<PositionOptions>,\n\t\t\tdefault: { enableHighAccuracy: false, timeout: 6000 } as PositionOptions\n\t\t},\n\t\tfitBoundsOptions  : {\n\t\t\ttype   : Object as PropType<FitBoundsOptions>,\n\t\t\tdefault: { maxZoom: 15 } as FitBoundsOptions\n\t\t},\n\t\ttrackUserLocation : {\n\t\t\ttype   : Boolean as PropType<boolean>,\n\t\t\tdefault: false\n\t\t},\n\t\tshowAccuracyCircle: {\n\t\t\ttype   : Boolean as PropType<boolean>,\n\t\t\tdefault: true\n\t\t},\n\t\tshowUserLocation  : {\n\t\t\ttype   : Boolean as PropType<boolean>,\n\t\t\tdefault: true\n\t\t}\n\t},\n\tsetup(props) {\n\n\t\tconst map           = inject(mapSymbol)!,\n\t\t\t  isInitialized = inject(isInitializedSymbol)!,\n\t\t\t  control       = new GeolocateControl({\n\t\t\t\t  positionOptions   : props.positionOptions,\n\t\t\t\t  fitBoundsOptions  : props.fitBoundsOptions,\n\t\t\t\t  trackUserLocation : props.trackUserLocation,\n\t\t\t\t  showAccuracyCircle: props.showAccuracyCircle,\n\t\t\t\t  showUserLocation  : props.showUserLocation\n\t\t\t  });\n\n\t\tusePositionWatcher(toRef(props, 'position'), map, control);\n\t\tonBeforeUnmount(() => isInitialized.value && map.value?.removeControl(control));\n\n\t},\n\trender() {\n\t\t// nothing\n\t}\n});\n","import { defineComponent, inject, onBeforeUnmount, PropType, toRef } from 'vue';\nimport { Position, PositionProp, PositionValues } from '@/lib/components/controls/position.enum';\nimport { isInitializedSymbol, mapSymbol } from '@/lib/types';\nimport { NavigationControl } from 'maplibre-gl';\nimport { usePositionWatcher } from '@/lib/composable/usePositionWatcher';\n\nexport default /*#__PURE__*/ defineComponent({\n\tname : 'MglNavigationControl',\n\tprops: {\n\t\tposition      : {\n\t\t\ttype     : String as PropType<PositionProp>,\n\t\t\tdefault  : Position.TOP_RIGHT,\n\t\t\tvalidator: (v: Position) => {\n\t\t\t\treturn PositionValues.indexOf(v) !== -1;\n\t\t\t}\n\t\t},\n\t\tshowCompass   : { type: Boolean as PropType<boolean>, default: true },\n\t\tshowZoom      : { type: Boolean as PropType<boolean>, default: true },\n\t\tvisualizePitch: Boolean as PropType<boolean>\n\t},\n\tsetup(props) {\n\n\t\tconst map           = inject(mapSymbol)!,\n\t\t\t  isInitialized = inject(isInitializedSymbol)!,\n\t\t\t  control       = new NavigationControl({ showCompass: props.showCompass, showZoom: props.showZoom, visualizePitch: props.visualizePitch });\n\n\t\tusePositionWatcher(toRef(props, 'position'), map, control);\n\t\tonBeforeUnmount(() => isInitialized.value && map.value?.removeControl(control));\n\n\t},\n\trender() {\n\t\t// nothing\n\t}\n});\n","import { defineComponent, inject, onBeforeUnmount, PropType, toRef } from 'vue';\nimport { Position, PositionProp, PositionValues } from '@/lib/components/controls/position.enum';\nimport { isInitializedSymbol, mapSymbol } from '@/lib/types';\nimport { ScaleControl } from 'maplibre-gl';\nimport { usePositionWatcher } from '@/lib/composable/usePositionWatcher';\n\nexport enum ScaleControlUnit {\n\tIMPERIAL = 'imperial',\n\tMETRIC   = 'metric',\n\tNAUTICAL = 'nautical'\n}\n\ntype UnitValue = ScaleControlUnit | 'imperial' | 'metric' | 'nautical';\nconst UnitValues = Object.values(ScaleControlUnit);\n\n\nexport default /*#__PURE__*/ defineComponent({\n\tname : 'MglScaleControl',\n\tprops: {\n\t\tposition: {\n\t\t\ttype     : String as PropType<PositionProp>,\n\t\t\tvalidator: (v: Position) => {\n\t\t\t\treturn PositionValues.indexOf(v) !== -1;\n\t\t\t}\n\t\t},\n\t\tmaxWidth: { type: Number as PropType<number>, default: 100 },\n\t\tunit    : {\n\t\t\ttype     : String as PropType<UnitValue>,\n\t\t\tdefault  : ScaleControlUnit.METRIC,\n\t\t\tvalidator: (v: ScaleControlUnit) => {\n\t\t\t\treturn UnitValues.indexOf(v) !== -1;\n\t\t\t}\n\t\t}\n\t},\n\tsetup(props) {\n\n\t\tconst map           = inject(mapSymbol)!,\n\t\t\t  isInitialized = inject(isInitializedSymbol)!,\n\t\t\t  control       = new ScaleControl({ maxWidth: props.maxWidth, unit: props.unit });\n\n\t\tusePositionWatcher(toRef(props, 'position'), map, control);\n\t\tonBeforeUnmount(() => isInitialized.value && map.value?.removeControl(control));\n\n\t},\n\trender() {\n\t\t// nothing\n\t}\n});\n","import { defineComponent, h, PropType, ref, SlotsType, warn, watch } from 'vue';\n\nexport enum ButtonType {\n\tDEFAULT     = 'default',\n\tTEXT        = 'text',\n\tMDI         = 'mdi',\n\tSIMPLE_ICON = 'simple-icons',\n}\n\nexport const ButtonTypeValues = Object.values(ButtonType);\n\ninterface Default {\n\tsize: number;\n\tviewbox: string;\n}\n\nconst types: { [key in ButtonType]?: Default } = {\n\t[ ButtonType.TEXT ]       : undefined,\n\t[ ButtonType.MDI ]        : {\n\t\tsize   : 21,\n\t\tviewbox: '0 0 24 24'\n\t},\n\t[ ButtonType.SIMPLE_ICON ]: {\n\t\tsize   : 21,\n\t\tviewbox: '0 0 24 24'\n\t},\n\t[ ButtonType.DEFAULT ]    : {\n\t\tsize   : 0,\n\t\tviewbox: '0 0 0 0'\n\t}\n};\n\n\nexport default /*#__PURE__*/ defineComponent({\n\tname : 'MglButton',\n\tprops: {\n\t\ttype   : {\n\t\t\ttype     : String as PropType<ButtonType | 'default' | 'text' | 'mdi' | 'simple-icons'>,\n\t\t\tdefault  : ButtonType.DEFAULT,\n\t\t\tvalidator: (v: ButtonType) => {\n\t\t\t\treturn ButtonTypeValues.indexOf(v) !== -1;\n\t\t\t}\n\t\t},\n\t\tpath   : {\n\t\t\ttype: String as PropType<string>\n\t\t},\n\t\tsize   : Number as PropType<number>,\n\t\tviewbox: String as PropType<string>\n\t},\n\tslots: Object as SlotsType<{ default: {} }>,\n\tsetup(props, { slots }) {\n\n\t\tif (!props.path && props.type !== ButtonType.TEXT) {\n\t\t\twarn('property `path` must be set on MaplibreButton');\n\t\t}\n\n\t\tconst defaults = ref(types[ props.type ] || types.default);\n\t\twatch(() => props.type, v => defaults.value = types[ v ] || types.default);\n\n\t\treturn () => {\n\t\t\tif (props.type === ButtonType.TEXT) {\n\t\t\t\treturn h('button', { type: 'button' }, slots.default?.({}));\n\t\t\t}\n\t\t\treturn h('button', { type: 'button', 'class': 'maplibregl-ctrl-icon' },\n\t\t\t\t[\n\t\t\t\t\th(\n\t\t\t\t\t\t'svg',\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\twidth  : props.size || defaults.value!.size,\n\t\t\t\t\t\t\theight : props.size || defaults.value!.size,\n\t\t\t\t\t\t\tviewBox: props.viewbox || defaults.value!.viewbox\n\t\t\t\t\t\t},\n\t\t\t\t\t\th('path', { fill: 'currentColor', d: props.path })\n\t\t\t\t\t),\n\t\t\t\t\tslots.default?.({})\n\t\t\t\t]\n\t\t\t);\n\t\t};\n\n\t}\n});\n","import {\n\tcreateCommentVNode,\n\tcreateTextVNode,\n\tdefineComponent,\n\th,\n\tinject,\n\tonBeforeUnmount,\n\tPropType,\n\tRef,\n\tref,\n\tshallowRef,\n\tSlotsType,\n\tTeleport,\n\ttoRef,\n\twatch\n} from 'vue';\nimport { Position, PositionProp, PositionValues } from '@/lib/components/controls/position.enum';\nimport { emitterSymbol, isInitializedSymbol, isLoadedSymbol, mapSymbol, StyleSwitchItem } from '@/lib/types';\nimport { CustomControl } from '@/lib/components/controls/custom.control';\nimport { usePositionWatcher } from '@/lib/composable/usePositionWatcher';\nimport { MglButton } from '@/lib/components';\nimport { ButtonType } from '@/lib/components/button.component';\n\nfunction isEvent(e: any): e is Event {\n\treturn e && !!(e as Event).stopPropagation;\n}\n\ninterface SlotProps {\n\tisOpen: Ref<boolean>,\n\ttoggleOpen: (forceIsOpen?: boolean | Event, e?: Event) => void,\n\tsetStyle: (s: StyleSwitchItem) => void,\n\tmapStyles: StyleSwitchItem[],\n\tcurrentStyle: Ref<StyleSwitchItem | null>,\n}\n\nexport default /*#__PURE__*/ defineComponent({\n\tname : 'MglStyleSwitchControl',\n\tprops: {\n\t\tposition  : {\n\t\t\ttype     : String as PropType<PositionProp>,\n\t\t\tvalidator: (v: Position) => {\n\t\t\t\treturn PositionValues.indexOf(v) !== -1;\n\t\t\t}\n\t\t},\n\t\tmapStyles : {\n\t\t\ttype    : Array as PropType<StyleSwitchItem[]>,\n\t\t\trequired: true,\n\t\t\tdefault : []\n\t\t},\n\t\tmodelValue: {\n\t\t\ttype: Object as PropType<StyleSwitchItem>\n\t\t},\n\t\tisOpen    : {\n\t\t\ttype   : Boolean as PropType<boolean>,\n\t\t\tdefault: undefined\n\t\t}\n\t},\n\tslots: Object as SlotsType<{ default: SlotProps, button: SlotProps, styleList: SlotProps }>,\n\temits: [ 'update:modelValue', 'update:isOpen' ],\n\tsetup(props, { emit, slots }) {\n\n\t\tconst map           = inject(mapSymbol)!,\n\t\t\t  isInitialized = inject(isInitializedSymbol)!,\n\t\t\t  isMapLoaded   = inject(isLoadedSymbol)!,\n\t\t\t  emitter       = inject(emitterSymbol)!,\n\t\t\t  isAdded       = ref(false),\n\t\t\t  isOpen        = ref(props.isOpen === undefined ? false : props.isOpen),\n\t\t\t  modelValue    = shallowRef(props.modelValue === undefined ? (props.mapStyles.length ? props.mapStyles[ 0 ] : null) : props.modelValue),\n\t\t\t  control       = new CustomControl(isAdded, false),\n\t\t\t  closer        = toggleOpen.bind(null, false);\n\n\t\tfunction setStyleByMap() {\n\t\t\tconst name = map.value!.getStyle().name;\n\t\t\tfor (let i = 0, len = props.mapStyles.length; i < len; i++) {\n\t\t\t\tif (props.mapStyles[ i ].name === name) {\n\t\t\t\t\tsetStyle(props.mapStyles[ i ]);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\twatch(isMapLoaded, (v) => {\n\t\t\tif (v) setStyleByMap();\n\t\t}, { immediate: true });\n\t\tmap.value!.on('style.load', setStyleByMap);\n\t\tdocument.addEventListener('click', closer);\n\n\n\t\tusePositionWatcher(toRef(props, 'position'), map, control);\n\n\t\tif (props.modelValue !== undefined) {\n\t\t\twatch(toRef(props, 'modelValue'), v => {\n\t\t\t\tif (v !== undefined) modelValue.value = v;\n\t\t\t});\n\t\t}\n\t\tif (props.isOpen !== undefined) {\n\t\t\twatch(toRef(props, 'isOpen'), v => {\n\t\t\t\tif (v !== undefined) isOpen.value = v;\n\t\t\t});\n\t\t}\n\n\t\tonBeforeUnmount(() => {\n\t\t\tif (isInitialized.value) {\n\t\t\t\tmap.value!.removeControl(control);\n\t\t\t\tmap.value!.off('style.load', setStyleByMap);\n\t\t\t}\n\t\t\tdocument.removeEventListener('click', closer);\n\t\t});\n\n\t\tfunction setStyle(s: StyleSwitchItem) {\n\t\t\tif (modelValue.value?.name === s.name) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\temitter.emit('styleSwitched', s);\n\n\t\t\t/*\n\t\t\t * Skip diff as long as Maplibre-GL doesn't fie `style.load` correctly\n\t\t\t * @see https://github.com/maplibre/maplibre-gl-js/issues/2587\n\t\t\t*/\n\t\t\tmap.value!.setStyle(s.style, {diff: false});\n\t\t\tif (props.modelValue === undefined) {\n\t\t\t\tmodelValue.value = s;\n\t\t\t}\n\t\t\temit('update:modelValue', s);\n\n\t\t\ttoggleOpen(false);\n\t\t}\n\n\t\tfunction toggleOpen(forceIsOpen?: boolean | Event, e?: Event) {\n\t\t\tif (isEvent(e)) {\n\t\t\t\te.stopPropagation();\n\t\t\t} else if (isEvent(forceIsOpen)) {\n\t\t\t\tforceIsOpen.stopPropagation();\n\t\t\t}\n\t\t\tif (props.isOpen !== undefined && props.isOpen === forceIsOpen || isOpen.value === forceIsOpen) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (props.isOpen === undefined) {\n\t\t\t\tisOpen.value = typeof forceIsOpen === 'boolean' ? forceIsOpen : !isOpen.value;\n\t\t\t\temit('update:isOpen', isOpen.value);\n\t\t\t} else {\n\t\t\t\temit('update:isOpen', typeof forceIsOpen === 'boolean' ? forceIsOpen : !props.isOpen);\n\t\t\t}\n\t\t}\n\n\t\treturn () => {\n\t\t\tif (!isAdded.value) {\n\t\t\t\treturn createCommentVNode('style-switch-control');\n\t\t\t}\n\n\t\t\tconst slotProps: SlotProps = {\n\t\t\t\tisOpen, toggleOpen, setStyle,\n\t\t\t\tmapStyles   : props.mapStyles,\n\t\t\t\tcurrentStyle: modelValue,\n\t\t\t};\n\n\t\t\treturn h(\n\t\t\t\tTeleport as any,\n\t\t\t\t{ to: control.container },\n\t\t\t\tslots.default\n\t\t\t\t\t? slots.default(slotProps)\n\t\t\t\t\t: [\n\t\t\t\t\t\tslots.button\n\t\t\t\t\t\t\t? slots.button(slotProps)\n\t\t\t\t\t\t\t: h(MglButton, {\n\t\t\t\t\t\t\t\ttype   : ButtonType.MDI,\n\t\t\t\t\t\t\t\tpath   : 'M12,18.54L19.37,12.8L21,14.07L12,21.07L3,14.07L4.62,12.81L12,18.54M12,16L3,9L12,2L21,9L12,16M12,4.53L6.26,9L12,13.47L17.74,9L12,4.53Z',\n\t\t\t\t\t\t\t\t'class': [ 'maplibregl-ctrl-icon maplibregl-style-switch', isOpen.value ? 'is-open' : '' ],\n\t\t\t\t\t\t\t\tonClick: toggleOpen.bind(null, true)\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t\tslots.styleList\n\t\t\t\t\t\t\t? slots.styleList(slotProps)\n\t\t\t\t\t\t\t: h(\n\t\t\t\t\t\t\t\t'div',\n\t\t\t\t\t\t\t\t{ 'class': [ 'maplibregl-style-list', isOpen.value ? 'is-open' : '' ] },\n\t\t\t\t\t\t\t\tprops.mapStyles.map((s) => {\n\t\t\t\t\t\t\t\t\treturn s.icon\n\t\t\t\t\t\t\t\t\t\t? h(MglButton, {\n\t\t\t\t\t\t\t\t\t\t\ttype   : ButtonType.MDI,\n\t\t\t\t\t\t\t\t\t\t\tpath   : s.icon.path,\n\t\t\t\t\t\t\t\t\t\t\t'class': modelValue.value?.name === s.name ? 'is-active' : '',\n\t\t\t\t\t\t\t\t\t\t\tonClick: () => setStyle(s)\n\t\t\t\t\t\t\t\t\t\t}, createTextVNode(s.label))\n\t\t\t\t\t\t\t\t\t\t: h('button', {\n\t\t\t\t\t\t\t\t\t\t\ttype   : 'button',\n\t\t\t\t\t\t\t\t\t\t\t'class': modelValue.value?.name === s.name ? 'is-active' : '',\n\t\t\t\t\t\t\t\t\t\t\tonClick: () => setStyle(s)\n\t\t\t\t\t\t\t\t\t\t}, createTextVNode(s.label));\n\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t)\n\t\t\t\t\t]\n\t\t\t);\n\t\t};\n\n\t},\n\t// just only for code assist\n\ttemplate: `\n\t\t<slot>\n\t\t<slot name=\"button\"></slot>\n\t\t<slot name=\"styleList\"></slot>\n\t\t</slot>\n\t`\n});\n\n","import { defineComponent, inject, onBeforeUnmount, PropType, unref, watch } from 'vue';\nimport { LngLatLike, Marker, MarkerOptions, PointLike, PositionAnchor } from 'maplibre-gl';\nimport { MapLib } from '@/lib/lib/map.lib';\nimport { mapSymbol } from '@/lib/types';\n\nexport default /*#__PURE__*/ defineComponent({\n\tname : 'MglMarker',\n\tprops: {\n\t\tcoordinates: {\n\t\t\ttype    : [ Object, Array ] as unknown as PropType<LngLatLike>,\n\t\t\trequired: true\n\t\t},\n\t\toffset     : [ Object, Array ] as PropType<PointLike>,\n\t\tanchor     : String as PropType<PositionAnchor>,\n\t\tcolor      : String as PropType<string>,\n\t\t// draggable        : Boolean as PropType<boolean>, todo implement feature\n\t\tclickTolerance   : Number as PropType<number>,\n\t\trotation         : Number as PropType<number>,\n\t\trotationAlignment: String as PropType<'map' | 'viewport' | 'auto'>,\n\t\tpitchAlignment   : String as PropType<'map' | 'viewport' | 'auto'>,\n\t\tscale            : Number as PropType<number>\n\t},\n\tsetup(props) {\n\n\t\tconst map                 = inject(mapSymbol)!,\n\t\t\t  opts: MarkerOptions = Object.keys(props)\n\t\t\t\t\t\t\t\t\t\t  .filter(opt => (props as any)[ opt ] !== undefined && MapLib.MARKER_OPTION_KEYS.indexOf(opt as keyof MarkerOptions) !== -1)\n\t\t\t\t\t\t\t\t\t\t  .reduce((obj, opt) => {\n\t\t\t\t\t\t\t\t\t\t\t  (obj as any)[ opt ] = unref((props as any)[ opt ]);\n\t\t\t\t\t\t\t\t\t\t\t  return obj;\n\t\t\t\t\t\t\t\t\t\t  }, {});\n\n\t\tconst marker = new Marker(opts);\n\t\tmarker.setLngLat(props.coordinates).addTo(map.value!);\n\n\t\twatch(() => props.coordinates, v => marker.setLngLat(v));\n\t\t// watch(() => props.draggable, v => marker.setDraggable(v || false));\n\t\twatch(() => props.offset, v => marker.setOffset(v || [ 0, 0 ]));\n\t\twatch(() => props.pitchAlignment, v => marker.setPitchAlignment(v || 'auto'));\n\t\twatch(() => props.rotationAlignment, v => marker.setRotationAlignment(v || 'auto'));\n\n\t\tonBeforeUnmount(marker.remove.bind(marker));\n\n\t\treturn { marker };\n\n\t},\n\trender() {\n\t\t// nothing\n\t}\n});\n","export type SourceLayerRegistryHandler = () => void\n\nexport class SourceLayerRegistry {\n\n\tprivate unmountHandlers = new Map<string, SourceLayerRegistryHandler>();\n\n\tregisterUnmountHandler(id: string, handler: SourceLayerRegistryHandler) {\n\t\tthis.unmountHandlers.set(id, handler);\n\t}\n\n\tunregisterUnmountHandler(id: string) {\n\t\tthis.unmountHandlers.delete(id);\n\t}\n\n\tunmount() {\n\t\tthis.unmountHandlers.forEach((h) => h());\n\t}\n\n}\n","import { ref, Ref, unref } from 'vue';\nimport { Source } from 'maplibre-gl';\n\nexport class SourceLib {\n\n\tprivate static readonly REFS = new Map<string, Ref<Source | undefined | null>>();\n\n\tstatic genSourceOpts<T extends object, O extends object>(type: string, props: object, sourceOpts: Array<keyof O>): T {\n\n\t\treturn Object.keys(props)\n\t\t\t\t\t .filter(opt => (props as any)[ opt ] !== undefined && sourceOpts.indexOf(opt as any) !== -1)\n\t\t\t\t\t .reduce((obj, opt) => {\n\t\t\t\t\t\t (obj as any)[ opt ] = unref((props as any)[ opt ]);\n\t\t\t\t\t\t return obj;\n\t\t\t\t\t }, { type } as T);\n\n\t}\n\n\tstatic getSourceRef<T extends Source>(mcid: number, source: any): Ref<T | undefined | null> {\n\n\t\tconst isString = typeof source === 'string',\n\t\t\t  key      = String(mcid) + (isString ? source : '');\n\t\tlet r          = SourceLib.REFS.get(key);\n\t\tif (!r) {\n\t\t\tr = ref(isString ? null : undefined);\n\t\t\tSourceLib.REFS.set(key, r);\n\t\t}\n\t\treturn r as Ref<T | undefined | null>;\n\n\t}\n\n}","import { inject, onBeforeUnmount, Ref, watch } from 'vue';\nimport { Source, SourceSpecification } from 'maplibre-gl';\nimport { emitterSymbol, isLoadedSymbol, mapSymbol } from '@/lib/types';\nimport { SourceLayerRegistry } from '@/lib/lib/sourceLayer.registry';\nimport { SourceLib } from '@/lib/lib/source.lib';\n\nexport function useSource<O extends object>(\n\tsource: Ref<Source | undefined | null>,\n\tprops: any,\n\ttype: string,\n\tsourceOpts: Array<keyof O>,\n\tregistry: SourceLayerRegistry\n) {\n\n\tconst map      = inject(mapSymbol)!,\n\t\t  isLoaded = inject(isLoadedSymbol)!,\n\t\t  emitter  = inject(emitterSymbol)!;\n\n\tfunction addSource() {\n\t\tif (isLoaded.value) {\n\t\t\tmap.value!.addSource(props.sourceId, SourceLib.genSourceOpts<object, O>(type, props, sourceOpts) as SourceSpecification);\n\t\t\tsource.value = map.value!.getSource(props.sourceId);\n\t\t}\n\t}\n\n\tfunction resetSource() {\n\t\tsource.value = null;\n\t}\n\n\twatch(isLoaded, addSource, { immediate: true });\n\tmap.value!.on('style.load', addSource);\n\temitter.on('styleSwitched', resetSource);\n\n\treturn onBeforeUnmount(() => {\n\t\tif (isLoaded.value) {\n\t\t\tregistry.unmount();\n\t\t\tmap.value!.removeSource(props.sourceId);\n\t\t}\n\t\tmap.value!.off('style.load', addSource);\n\t\temitter.off('styleSwitched', resetSource);\n\t});\n\n}\n","import { createCommentVNode, defineComponent, inject, PropType, provide, toRef, watch } from 'vue';\nimport { AllSourceOptions, componentIdSymbol, sourceIdSymbol, sourceLayerRegistry } from '@/lib/types';\nimport { CanvasSource, CanvasSourceSpecification, Coordinates } from 'maplibre-gl';\nimport { SourceLayerRegistry } from '@/lib/lib/sourceLayer.registry';\nimport { SourceLib } from '@/lib/lib/source.lib';\nimport { useSource } from '@/lib/composable/useSource';\nimport { SlotsType } from 'vue/dist/vue';\n\nconst sourceOpts = AllSourceOptions<CanvasSourceSpecification>({\n\tanimate    : undefined,\n\tcanvas     : undefined,\n\tcoordinates: undefined,\n});\n\nexport default /*#__PURE__*/ defineComponent({\n\tname : 'MglCanvasSource',\n\tprops: {\n\t\tsourceId   : {\n\t\t\ttype    : String as PropType<string>,\n\t\t\trequired: true\n\t\t},\n\t\tcoordinates: Array as unknown as PropType<Coordinates>,\n\t\tanimate    : Boolean as PropType<boolean>,\n\t\tcanvas     : [ Object, String ] as PropType<HTMLCanvasElement | string>\n\t},\n\tslots: Object as SlotsType<{ default: {} }>,\n\tsetup(props, { slots }) {\n\n\t\tconst cid      = inject(componentIdSymbol)!,\n\t\t\t  source   = SourceLib.getSourceRef<CanvasSource>(cid, props.sourceId),\n\t\t\t  registry = new SourceLayerRegistry();\n\n\t\tprovide(sourceIdSymbol, props.sourceId);\n\t\tprovide(sourceLayerRegistry, registry);\n\n\t\tuseSource<CanvasSourceSpecification>(source, props, 'canvas', sourceOpts, registry);\n\n\t\twatch(toRef(props, 'coordinates'), v => {\n\t\t\tif (v) {\n\t\t\t\tsource.value?.setCoordinates(v);\n\t\t\t}\n\t\t});\n\n\t\treturn () => [\n\t\t\tcreateCommentVNode('Canvas Source'),\n\t\t\tsource.value && slots.default ? slots.default({}) : undefined\n\t\t];\n\n\t}\n});\n","import { createCommentVNode, defineComponent, inject, PropType, provide, SlotsType, toRef, watch } from 'vue';\nimport { AllSourceOptions, componentIdSymbol, sourceIdSymbol, sourceLayerRegistry } from '@/lib/types';\nimport { GeoJSONSource, GeoJSONSourceOptions, GeoJSONSourceSpecification, PromoteIdSpecification } from 'maplibre-gl';\nimport { SourceLayerRegistry } from '@/lib/lib/sourceLayer.registry';\nimport type GeoJSON from 'geojson';\nimport { SourceLib } from '@/lib/lib/source.lib';\nimport { useSource } from '@/lib/composable/useSource';\n\nconst sourceOpts = AllSourceOptions<GeoJSONSourceSpecification>({\n\tdata             : undefined,\n\tmaxzoom          : undefined,\n\tattribution      : undefined,\n\tbuffer           : undefined,\n\ttolerance        : undefined,\n\tcluster          : undefined,\n\tclusterRadius    : undefined,\n\tclusterMaxZoom   : undefined,\n\tclusterMinPoints : undefined,\n\tclusterProperties: undefined,\n\tlineMetrics      : undefined,\n\tgenerateId       : undefined,\n\tpromoteId        : undefined,\n\tfilter           : undefined,\n});\n\n\nexport default /*#__PURE__*/ defineComponent({\n\tname : 'MglGeoJsonSource',\n\tprops: {\n\t\tsourceId         : {\n\t\t\ttype    : String as PropType<string>,\n\t\t\trequired: true\n\t\t},\n\t\tdata             : [ Object, String ] as PropType<GeoJSON.Feature<GeoJSON.Geometry> | GeoJSON.FeatureCollection<GeoJSON.Geometry> | string>,\n\t\tmaxzoom          : Number as PropType<number>,\n\t\tattribution      : String as PropType<string>,\n\t\tbuffer           : Number as PropType<number>,\n\t\ttolerance        : Number as PropType<number>,\n\t\tcluster          : [ Number, Boolean ] as PropType<number | boolean>,\n\t\tclusterRadius    : Number as PropType<number>,\n\t\tclusterMaxZoom   : Number as PropType<number>,\n\t\tclusterMinPoints : Number as PropType<number>,\n\t\tclusterProperties: Object as PropType<object>,\n\t\tlineMetrics      : Boolean as PropType<boolean>,\n\t\tgenerateId       : Boolean as PropType<boolean>,\n\t\tpromoteId        : [ Object, String ] as PropType<PromoteIdSpecification>,\n\t\tfilter           : [ Array, String, Object ] as PropType<any>\n\t},\n\tslots: Object as SlotsType<{ default: {} }>,\n\tsetup(props, { slots }) {\n\n\t\tconst cid      = inject(componentIdSymbol)!,\n\t\t\t  source   = SourceLib.getSourceRef<GeoJSONSource>(cid, props.sourceId),\n\t\t\t  registry = new SourceLayerRegistry();\n\n\t\tprovide(sourceIdSymbol, props.sourceId);\n\t\tprovide(sourceLayerRegistry, registry);\n\n\t\tuseSource<GeoJSONSourceOptions>(source, props, 'geojson', sourceOpts, registry);\n\n\t\twatch(toRef(props, 'data'), v => source.value?.setData(v || { type: 'FeatureCollection', features: [] }));\n\n\t\treturn () => [\n\t\t\tcreateCommentVNode('GeoJSON Source'),\n\t\t\tsource.value && slots.default ? slots.default({}) : undefined\n\t\t];\n\n\t}\n});\n","import { createCommentVNode, defineComponent, inject, PropType, provide, toRef, watch } from 'vue';\nimport { AllSourceOptions, componentIdSymbol, sourceIdSymbol, sourceLayerRegistry } from '@/lib/types';\nimport { Coordinates, ImageSource, ImageSourceSpecification } from 'maplibre-gl';\nimport { SourceLayerRegistry } from '@/lib/lib/sourceLayer.registry';\nimport { SourceLib } from '@/lib/lib/source.lib';\nimport { useSource } from '@/lib/composable/useSource';\nimport { SlotsType } from 'vue/dist/vue';\n\nconst sourceOpts = AllSourceOptions<ImageSourceSpecification>({\n\turl        : undefined,\n\tcoordinates: undefined,\n});\n\nexport default /*#__PURE__*/ defineComponent({\n\tname : 'MglImageSource',\n\tprops: {\n\t\tsourceId   : {\n\t\t\ttype    : String as PropType<string>,\n\t\t\trequired: true\n\t\t},\n\t\turl        : String as PropType<string>,\n\t\tcoordinates: Array as unknown as PropType<Coordinates>\n\t},\n\tslots: Object as SlotsType<{ default: {} }>,\n\tsetup(props, { slots }) {\n\n\t\tconst cid      = inject(componentIdSymbol)!,\n\t\t\t  source   = SourceLib.getSourceRef<ImageSource>(cid, props.sourceId),\n\t\t\t  registry = new SourceLayerRegistry();\n\n\t\tprovide(sourceIdSymbol, props.sourceId);\n\t\tprovide(sourceLayerRegistry, registry);\n\n\t\tuseSource<ImageSourceSpecification>(source, props, 'image', sourceOpts, registry);\n\n\t\twatch(toRef(props, 'coordinates'), v => {\n\t\t\tif (v) {\n\t\t\t\tsource.value?.setCoordinates(v);\n\t\t\t}\n\t\t});\n\n\t\treturn () => [\n\t\t\tcreateCommentVNode('Image Source'),\n\t\t\tsource.value && slots.default ? slots.default({}) : undefined\n\t\t];\n\n\t}\n});\n","import { createCommentVNode, defineComponent, inject, PropType, provide, SlotsType } from 'vue';\nimport { AllSourceOptions, componentIdSymbol, sourceIdSymbol, sourceLayerRegistry } from '@/lib/types';\nimport { RasterSourceSpecification, RasterTileSource } from 'maplibre-gl';\nimport { SourceLayerRegistry } from '@/lib/lib/sourceLayer.registry';\nimport { SourceLib } from '@/lib/lib/source.lib';\nimport { useSource } from '@/lib/composable/useSource';\n\nconst sourceOpts = AllSourceOptions<RasterSourceSpecification>({\n\turl        : undefined,\n\ttiles      : undefined,\n\tbounds     : undefined,\n\tminzoom    : undefined,\n\tmaxzoom    : undefined,\n\ttileSize   : undefined,\n\tscheme     : undefined,\n\tattribution: undefined,\n\tvolatile   : undefined\n});\n\nexport default /*#__PURE__*/ defineComponent({\n\tname : 'MglRasterSource',\n\tprops: {\n\t\tsourceId   : {\n\t\t\ttype    : String as PropType<string>,\n\t\t\trequired: true\n\t\t},\n\t\turl        : String as PropType<string>,\n\t\ttiles      : Array as PropType<string[]>,\n\t\tbounds     : Array as PropType<number[]>,\n\t\tminzoom    : Number as PropType<number>,\n\t\tmaxzoom    : Number as PropType<number>,\n\t\ttileSize   : Number as PropType<number>,\n\t\tscheme     : String as PropType<'xyz' | 'tms'>,\n\t\tattribution: String as PropType<string>,\n\t\tvolatile   : Boolean\n\t},\n\tslots: Object as SlotsType<{ default: {} }>,\n\tsetup(props, { slots }) {\n\n\t\tconst cid      = inject(componentIdSymbol)!,\n\t\t\t  source   = SourceLib.getSourceRef<RasterTileSource>(cid, props.sourceId),\n\t\t\t  registry = new SourceLayerRegistry();\n\n\t\tprovide(sourceIdSymbol, props.sourceId);\n\t\tprovide(sourceLayerRegistry, registry);\n\n\t\tuseSource<RasterSourceSpecification>(source, props, 'raster', sourceOpts, registry);\n\n\t\treturn () => [\n\t\t\tcreateCommentVNode('Raster Source'),\n\t\t\tsource.value && slots.default ? slots.default({}) : undefined\n\t\t];\n\n\t}\n});\n","import { createCommentVNode, defineComponent, inject, PropType, provide } from 'vue';\nimport { AllSourceOptions, componentIdSymbol, sourceIdSymbol, sourceLayerRegistry } from '@/lib/types';\nimport { RasterDEMSourceSpecification, RasterDEMTileSource } from 'maplibre-gl';\nimport { SourceLayerRegistry } from '@/lib/lib/sourceLayer.registry';\nimport { SourceLib } from '@/lib/lib/source.lib';\nimport { useSource } from '@/lib/composable/useSource';\nimport { SlotsType } from 'vue/dist/vue';\n\nconst sourceOpts = AllSourceOptions<RasterDEMSourceSpecification>({\n\turl        : undefined,\n\ttiles      : undefined,\n\tbounds     : undefined,\n\tminzoom    : undefined,\n\tmaxzoom    : undefined,\n\ttileSize   : undefined,\n\tattribution: undefined,\n\tencoding   : undefined,\n\tvolatile   : undefined\n});\n\n\nexport default /*#__PURE__*/ defineComponent({\n\tname : 'MglRasterDemSource',\n\tprops: {\n\t\tsourceId   : {\n\t\t\ttype    : String as PropType<string>,\n\t\t\trequired: true\n\t\t},\n\t\turl        : String as PropType<string>,\n\t\ttiles      : Array as PropType<string[]>,\n\t\tbounds     : Array as PropType<number[]>,\n\t\tminzoom    : Number as PropType<number>,\n\t\tmaxzoom    : Number as PropType<number>,\n\t\ttileSize   : Number as PropType<number>,\n\t\tattribution: String as PropType<string>,\n\t\tencoding   : String as PropType<'terrarium' | 'mapbox'>,\n\t\tvolatile   : Boolean\n\t},\n\tslots: Object as SlotsType<{ default: {} }>,\n\tsetup(props, { slots }) {\n\n\t\tconst cid      = inject(componentIdSymbol)!,\n\t\t\t  source   = SourceLib.getSourceRef<RasterDEMTileSource>(cid, props.sourceId),\n\t\t\t  registry = new SourceLayerRegistry();\n\n\t\tprovide(sourceIdSymbol, props.sourceId);\n\t\tprovide(sourceLayerRegistry, registry);\n\n\t\tuseSource<RasterDEMSourceSpecification>(source, props, 'raster-dem', sourceOpts, registry);\n\n\t\treturn () => [\n\t\t\tcreateCommentVNode('RasterDem Source'),\n\t\t\tsource.value && slots.default ? slots.default({}) : undefined\n\t\t];\n\n\t}\n});\n","import { createCommentVNode, defineComponent, inject, PropType, provide, toRef, watch } from 'vue';\nimport { AllSourceOptions, componentIdSymbol, sourceIdSymbol, sourceLayerRegistry } from '@/lib/types';\nimport { PromoteIdSpecification, VectorSourceSpecification, VectorTileSource } from 'maplibre-gl';\nimport { SourceLayerRegistry } from '@/lib/lib/sourceLayer.registry';\nimport { SourceLib } from '@/lib/lib/source.lib';\nimport { useSource } from '@/lib/composable/useSource';\nimport { SlotsType } from 'vue/dist/vue';\n\nconst sourceOpts = AllSourceOptions<VectorSourceSpecification>({\n\turl        : undefined,\n\ttiles      : undefined,\n\tbounds     : undefined,\n\tscheme     : undefined,\n\tminzoom    : undefined,\n\tmaxzoom    : undefined,\n\tattribution: undefined,\n\tpromoteId  : undefined,\n\tvolatile   : undefined\n});\n\nexport default /*#__PURE__*/ defineComponent({\n\tname : 'MglVectorSource',\n\tprops: {\n\t\tsourceId   : {\n\t\t\ttype    : String as PropType<string>,\n\t\t\trequired: true\n\t\t},\n\t\turl        : String as PropType<string>,\n\t\ttiles      : Array as PropType<string[]>,\n\t\tbounds     : Array as PropType<number[]>,\n\t\tscheme     : String as PropType<'xyz' | 'tms'>,\n\t\tminzoom    : Number as PropType<number>,\n\t\tmaxzoom    : Number as PropType<number>,\n\t\tattribution: String as PropType<string>,\n\t\tpromoteId  : [ Object, String ] as PropType<PromoteIdSpecification>,\n\t\tvolatile   : Boolean\n\t},\n\tslots: Object as SlotsType<{ default: {} }>,\n\tsetup(props, { slots }) {\n\n\t\tconst cid      = inject(componentIdSymbol)!,\n\t\t\t  source   = SourceLib.getSourceRef<VectorTileSource>(cid, props.sourceId),\n\t\t\t  registry = new SourceLayerRegistry();\n\n\t\tprovide(sourceIdSymbol, props.sourceId);\n\t\tprovide(sourceLayerRegistry, registry);\n\n\t\tuseSource<VectorSourceSpecification>(source, props, 'vector', sourceOpts, registry);\n\n\t\twatch(toRef(props, 'tiles'), v => source.value?.setTiles(v || []));\n\t\twatch(toRef(props, 'url'), v => source.value?.setUrl(v || ''));\n\n\t\treturn () => [\n\t\t\tcreateCommentVNode('Vector Source'),\n\t\t\tsource.value && slots.default ? slots.default({}) : undefined\n\t\t];\n\n\t}\n});\n","import { createCommentVNode, defineComponent, inject, PropType, provide, toRef, watch } from 'vue';\nimport { AllSourceOptions, componentIdSymbol, sourceIdSymbol, sourceLayerRegistry } from '@/lib/types';\nimport { Coordinates, VideoSource, VideoSourceSpecification } from 'maplibre-gl';\nimport { SourceLayerRegistry } from '@/lib/lib/sourceLayer.registry';\nimport { SourceLib } from '@/lib/lib/source.lib';\nimport { useSource } from '@/lib/composable/useSource';\nimport { SlotsType } from 'vue/dist/vue';\n\nconst sourceOpts = AllSourceOptions<VideoSourceSpecification>({\n\turls       : undefined,\n\tcoordinates: undefined\n});\n\nexport default /*#__PURE__*/ defineComponent({\n\tname : 'MglVideoSource',\n\tprops: {\n\t\tsourceId   : {\n\t\t\ttype    : String as PropType<string>,\n\t\t\trequired: true\n\t\t},\n\t\turls       : Array as PropType<string[]>,\n\t\tcoordinates: Array as unknown as PropType<Coordinates>\n\t},\n\tslots: Object as SlotsType<{ default: {} }>,\n\tsetup(props, { slots }) {\n\n\t\tconst cid      = inject(componentIdSymbol)!,\n\t\t\t  source   = SourceLib.getSourceRef<VideoSource>(cid, props.sourceId),\n\t\t\t  registry = new SourceLayerRegistry();\n\n\t\tprovide(sourceIdSymbol, props.sourceId);\n\t\tprovide(sourceLayerRegistry, registry);\n\n\t\tuseSource<VideoSourceSpecification>(source, props, 'video', sourceOpts, registry);\n\n\t\twatch(toRef(props, 'coordinates'), v => {\n\t\t\tif (v) {\n\t\t\t\tsource.value?.setCoordinates(v);\n\t\t\t}\n\t\t});\n\n\t\treturn () => [\n\t\t\tcreateCommentVNode('Video Source'),\n\t\t\tsource.value && slots.default ? slots.default({}) : undefined\n\t\t];\n\n\t}\n});\n","import {\n\tBackgroundLayerSpecification,\n\tCircleLayerSpecification,\n\tFillExtrusionLayerSpecification,\n\tFillLayerSpecification,\n\tHeatmapLayerSpecification,\n\tHillshadeLayerSpecification,\n\tLayerSpecification,\n\tLineLayerSpecification,\n\tMap,\n\tMapLayerEventType,\n\tRasterLayerSpecification,\n\tSource,\n\tSymbolLayerSpecification\n} from 'maplibre-gl';\nimport { PropType, unref, VNode } from 'vue';\n\nexport class LayerLib {\n\n\tstatic readonly SOURCE_OPTS: Array<keyof (Omit<FillLayerSpecification & LineLayerSpecification & SymbolLayerSpecification & CircleLayerSpecification & HeatmapLayerSpecification & FillExtrusionLayerSpecification & RasterLayerSpecification & HillshadeLayerSpecification & BackgroundLayerSpecification, 'source-layer'> & {\n\t\tsourceLayer?: string\n\t})> = [\n\t\t'metadata', 'ref', 'source', 'sourceLayer', 'minzoom', 'maxzoom', 'interactive', 'filter', 'layout', 'paint'\n\t];\n\n\tstatic readonly LAYER_EVENTS: Array<keyof MapLayerEventType> = [\n\t\t'click', 'dblclick', 'mousedown', 'mouseup', 'mousemove', 'mouseenter', 'mouseleave', 'mouseover', 'mouseout', 'contextmenu', 'touchstart', 'touchend',\n\t\t'touchcancel'\n\t];\n\n\tstatic readonly SHARED = {\n\t\tprops: {\n\t\t\tlayerId    : {\n\t\t\t\ttype: String as PropType<string>,\n\t\t\t\trequired: true\n\t\t\t},\n\t\t\tsource     : [ String, Object ] as PropType<string | Source>,\n\t\t\tmetadata   : [ Object, Array, String, Number ] as PropType<any>,\n\t\t\tref        : String as PropType<string>,\n\t\t\tsourceLayer: String as PropType<string>,\n\t\t\tminzoom    : Number as PropType<number>,\n\t\t\tmaxzoom    : Number as PropType<number>,\n\t\t\tinteractive: Boolean as PropType<boolean>,\n\t\t\tfilter     : Array as PropType<any[ ]>,\n\t\t\tbefore     : String as PropType<string>\n\t\t},\n\t\temits: [\n\t\t\t'click', 'dblclick', 'mousedown', 'mouseup', 'mousemove', 'mouseenter', 'mouseleave', 'mouseover', 'mouseout', 'contextmenu', 'touchstart', 'touchend',\n\t\t\t'touchcancel'\n\t\t]\n\t};\n\n\tstatic genLayerOpts<T = LayerSpecification>(id: string, type: string, props: any, source: any): T {\n\n\t\treturn Object.keys(props)\n\t\t\t\t\t .filter(opt => (props as any)[ opt ] !== undefined && LayerLib.SOURCE_OPTS.indexOf(opt as any) !== -1)\n\t\t\t\t\t .reduce((obj, opt) => {\n\t\t\t\t\t\t (obj as any)[ opt === 'sourceLayer' ? 'source-layer' : opt ] = unref((props as any)[ opt ]);\n\t\t\t\t\t\t return obj;\n\t\t\t\t\t }, { type, source: props.source || source, id } as T);\n\n\t}\n\n\tstatic registerLayerEvents(map: Map, layerId: string, vn: VNode) {\n\n\t\tif (!vn.props) {\n\t\t\treturn;\n\t\t}\n\n\t\tfor (let i = 0, len = LayerLib.LAYER_EVENTS.length; i < len; i++) {\n\t\t\tconst evProp = 'on' + LayerLib.LAYER_EVENTS[ i ].charAt(0).toUpperCase() + LayerLib.LAYER_EVENTS[ i ].substr(1);\n\t\t\tif (vn.props[ evProp ]) {\n\t\t\t\tmap.on(LayerLib.LAYER_EVENTS[ i ], layerId, vn.props[ evProp ]);\n\t\t\t}\n\t\t}\n\n\t}\n\n\tstatic unregisterLayerEvents(map: Map, layerId: string, vn: VNode) {\n\n\t\tif (!vn.props) {\n\t\t\treturn;\n\t\t}\n\n\t\tfor (let i = 0, len = LayerLib.LAYER_EVENTS.length; i < len; i++) {\n\t\t\tconst evProp = 'on' + LayerLib.LAYER_EVENTS[ i ].charAt(0).toUpperCase() + LayerLib.LAYER_EVENTS[ i ].substr(1);\n\t\t\tif (vn.props[ evProp ]) {\n\t\t\t\tmap.off(LayerLib.LAYER_EVENTS[ i ], layerId, vn.props[ evProp ]);\n\t\t\t}\n\t\t}\n\n\t}\n\n}","import { inject, onBeforeUnmount } from 'vue';\nimport { ComponentInternalInstance } from '@vue/runtime-core';\nimport { LayerLib } from '@/lib/lib/layer.lib';\nimport { isLoadedSymbol, mapSymbol, sourceLayerRegistry } from '@/lib/types';\n\nexport function useDisposableLayer(layerId: string, ci?: ComponentInternalInstance) {\n\n\tconst map      = inject(mapSymbol)!,\n\t\t  isLoaded = inject(isLoadedSymbol)!,\n\t\t  registry = inject(sourceLayerRegistry)!;\n\n\tfunction removeLayer() {\n\t\tif (isLoaded.value) {\n\t\t\tif (ci) {\n\t\t\t\tLayerLib.unregisterLayerEvents(map.value!, layerId, ci.vnode);\n\t\t\t}\n\t\t\tconst layer = map.value!.getLayer(layerId);\n\t\t\tif (layer) {\n\t\t\t\tmap.value!.removeLayer(layerId);\n\t\t\t}\n\t\t}\n\t}\n\n\tregistry.registerUnmountHandler(layerId, removeLayer);\n\tonBeforeUnmount(() => {\n\t\tregistry.unregisterUnmountHandler(layerId);\n\t\tremoveLayer();\n\t});\n\n}","import { BackgroundLayerSpecification } from 'maplibre-gl';\nimport { createCommentVNode, defineComponent, inject, PropType, warn, watch } from 'vue';\nimport { componentIdSymbol, isLoadedSymbol, mapSymbol, sourceIdSymbol } from '@/lib/types';\nimport { LayerLib } from '@/lib/lib/layer.lib';\nimport { SourceLib } from '@/lib/lib/source.lib';\nimport { useDisposableLayer } from '@/lib/composable/useDisposableLayer';\n\nexport default /*#__PURE__*/ defineComponent({\n\tname : 'MglBackgroundLayer',\n\tprops: {\n\t\t...LayerLib.SHARED.props,\n\t\tlayout: Object as PropType<BackgroundLayerSpecification['layout']>,\n\t\tpaint : Object as PropType<BackgroundLayerSpecification['paint']>\n\t},\n\temits: [ ...LayerLib.SHARED.emits ],\n\tsetup(props) {\n\n\t\tconst sourceId = inject(sourceIdSymbol);\n\n\t\tif (!sourceId && !props.source) {\n\t\t\twarn('Background Layer: layer must be used inside source tag or source prop must be set');\n\t\t\treturn;\n\t\t}\n\n\t\tconst map       = inject(mapSymbol)!,\n\t\t\t  isLoaded  = inject(isLoadedSymbol)!,\n\t\t\t  cid       = inject(componentIdSymbol)!,\n\t\t\t  sourceRef = SourceLib.getSourceRef(cid, props.source || sourceId);\n\n\t\tuseDisposableLayer(props.layerId!);\n\n\t\twatch([ isLoaded, sourceRef ], ([ il, src ]) => {\n\t\t\tif (il && (src || src === undefined)) {\n\t\t\t\tmap.value!.addLayer(LayerLib.genLayerOpts<BackgroundLayerSpecification>(props.layerId!, 'background', props, sourceId), props.before || undefined);\n\t\t\t}\n\t\t}, { immediate: true });\n\n\t\treturn () => createCommentVNode('Background Layer');\n\n\t}\n});\n","import { CircleLayerSpecification } from 'maplibre-gl';\nimport { createCommentVNode, defineComponent, getCurrentInstance, inject, PropType, warn, watch } from 'vue';\nimport { componentIdSymbol, isLoadedSymbol, mapSymbol, sourceIdSymbol } from '@/lib/types';\nimport { useDisposableLayer } from '@/lib/composable/useDisposableLayer';\nimport { LayerLib } from '@/lib/lib/layer.lib';\nimport { SourceLib } from '@/lib/lib/source.lib';\n\nexport default /*#__PURE__*/ defineComponent({\n\tname : 'MglCircleLayer',\n\tprops: {\n\t\t...LayerLib.SHARED.props,\n\t\tlayout: Object as PropType<CircleLayerSpecification['layout']>,\n\t\tpaint : Object as PropType<CircleLayerSpecification['paint']>\n\t},\n\temits: [ ...LayerLib.SHARED.emits ],\n\tsetup(props) {\n\n\t\tconst sourceId = inject(sourceIdSymbol);\n\n\t\tif (!sourceId && !props.source) {\n\t\t\twarn('Circle Layer: layer must be used inside source tag or source prop must be set');\n\t\t\treturn;\n\t\t}\n\n\t\tconst ci        = getCurrentInstance()!,\n\t\t\t  map       = inject(mapSymbol)!,\n\t\t\t  isLoaded  = inject(isLoadedSymbol)!,\n\t\t\t  cid       = inject(componentIdSymbol)!,\n\t\t\t  sourceRef = SourceLib.getSourceRef(cid, props.source || sourceId);\n\n\t\tuseDisposableLayer(props.layerId!, ci);\n\n\t\twatch([ isLoaded, sourceRef ], ([ il, src ]) => {\n\t\t\tif (il && (src || src === undefined)) {\n\t\t\t\tmap.value!.addLayer(LayerLib.genLayerOpts<CircleLayerSpecification>(props.layerId!, 'circle', props, sourceId), props.before || undefined);\n\t\t\t\tLayerLib.registerLayerEvents(map.value!, props.layerId!, ci.vnode);\n\t\t\t}\n\t\t}, { immediate: true });\n\n\t\treturn () => createCommentVNode('Circle Layer');\n\n\t}\n});\n","import { FillLayerSpecification } from 'maplibre-gl';\nimport { createCommentVNode, defineComponent, getCurrentInstance, inject, PropType, warn, watch } from 'vue';\nimport { componentIdSymbol, isLoadedSymbol, mapSymbol, sourceIdSymbol } from '@/lib/types';\nimport { LayerLib } from '@/lib/lib/layer.lib';\nimport { SourceLib } from '@/lib/lib/source.lib';\nimport { useDisposableLayer } from '@/lib/composable/useDisposableLayer';\n\nexport default /*#__PURE__*/ defineComponent({\n\tname : 'MglFillLayer',\n\tprops: {\n\t\t...LayerLib.SHARED.props,\n\t\tlayout: Object as PropType<FillLayerSpecification['layout']>,\n\t\tpaint : Object as PropType<FillLayerSpecification['paint']>\n\t},\n\temits: [ ...LayerLib.SHARED.emits ],\n\tsetup(props) {\n\n\t\tconst sourceId = inject(sourceIdSymbol);\n\n\t\tif (!sourceId && !props.source) {\n\t\t\twarn('Fill Layer: layer must be used inside source tag or source prop must be set');\n\t\t\treturn;\n\t\t}\n\n\t\tconst ci        = getCurrentInstance()!,\n\t\t\t  map       = inject(mapSymbol)!,\n\t\t\t  isLoaded  = inject(isLoadedSymbol)!,\n\t\t\t  cid       = inject(componentIdSymbol)!,\n\t\t\t  sourceRef = SourceLib.getSourceRef(cid, props.source || sourceId);\n\n\t\tuseDisposableLayer(props.layerId!, ci);\n\n\t\twatch([ isLoaded, sourceRef ], ([ il, src ]) => {\n\t\t\tif (il && (src || src === undefined)) {\n\t\t\t\tmap.value!.addLayer(LayerLib.genLayerOpts<FillLayerSpecification>(props.layerId!, 'fill', props, sourceId), props.before || undefined);\n\t\t\t\tLayerLib.registerLayerEvents(map.value!, props.layerId!, ci.vnode);\n\t\t\t}\n\t\t}, { immediate: true });\n\n\t\treturn () => createCommentVNode('Fill Layer');\n\n\t}\n});\n\n","import { FillExtrusionLayerSpecification } from 'maplibre-gl';\nimport { createCommentVNode, defineComponent, getCurrentInstance, inject, PropType, warn, watch } from 'vue';\nimport { componentIdSymbol, isLoadedSymbol, mapSymbol, sourceIdSymbol } from '@/lib/types';\nimport { LayerLib } from '@/lib/lib/layer.lib';\nimport { SourceLib } from '@/lib/lib/source.lib';\nimport { useDisposableLayer } from '@/lib/composable/useDisposableLayer';\n\nexport default /*#__PURE__*/ defineComponent({\n\tname : 'MglFillExtrusionLayer',\n\tprops: {\n\t\t...LayerLib.SHARED.props,\n\t\tlayout: Object as PropType<FillExtrusionLayerSpecification['layout']>,\n\t\tpaint : Object as PropType<FillExtrusionLayerSpecification['paint']>,\n\t},\n\temits: [ ...LayerLib.SHARED.emits ],\n\tsetup(props) {\n\n\t\tconst sourceId = inject(sourceIdSymbol);\n\n\t\tif (!sourceId && !props.source) {\n\t\t\twarn('Fill Extrude Layer: layer must be used inside source tag or source prop must be set');\n\t\t\treturn;\n\t\t}\n\n\t\tconst ci        = getCurrentInstance()!,\n\t\t\t  map       = inject(mapSymbol)!,\n\t\t\t  isLoaded  = inject(isLoadedSymbol)!,\n\t\t\t  cid       = inject(componentIdSymbol)!,\n\t\t\t  sourceRef = SourceLib.getSourceRef(cid, props.source || sourceId);\n\n\t\tuseDisposableLayer(props.layerId!, ci);\n\n\t\twatch([ isLoaded, sourceRef ], ([ il, src ]) => {\n\t\t\tif (il && (src || src === undefined)) {\n\t\t\t\tmap.value!.addLayer(LayerLib.genLayerOpts<FillExtrusionLayerSpecification>(props.layerId!, 'fill-extrusion', props, sourceId), props.before || undefined);\n\t\t\t\tLayerLib.registerLayerEvents(map.value!, props.layerId!, ci.vnode);\n\t\t\t}\n\t\t}, { immediate: true });\n\n\t\treturn () => createCommentVNode('Fill Extrusion Layer');\n\n\t}\n});\n","import { HeatmapLayerSpecification } from 'maplibre-gl';\nimport { createCommentVNode, defineComponent, getCurrentInstance, inject, PropType, warn, watch } from 'vue';\nimport { componentIdSymbol, isLoadedSymbol, mapSymbol, sourceIdSymbol } from '@/lib/types';\nimport { LayerLib } from '@/lib/lib/layer.lib';\nimport { SourceLib } from '@/lib/lib/source.lib';\nimport { useDisposableLayer } from '@/lib/composable/useDisposableLayer';\n\nexport default /*#__PURE__*/ defineComponent({\n\tname : 'MglHeatmapLayer',\n\tprops: {\n\t\t...LayerLib.SHARED.props,\n\t\tlayout: Object as PropType<HeatmapLayerSpecification['layout']>,\n\t\tpaint : Object as PropType<HeatmapLayerSpecification['paint']>\n\t},\n\temits: [ ...LayerLib.SHARED.emits ],\n\tsetup(props) {\n\n\t\tconst sourceId = inject(sourceIdSymbol);\n\n\t\tif (!sourceId && !props.source) {\n\t\t\twarn('Heatmap Layer: layer must be used inside source tag or source prop must be set');\n\t\t\treturn;\n\t\t}\n\n\t\tconst ci        = getCurrentInstance()!,\n\t\t\t  map       = inject(mapSymbol)!,\n\t\t\t  isLoaded  = inject(isLoadedSymbol)!,\n\t\t\t  cid       = inject(componentIdSymbol)!,\n\t\t\t  sourceRef = SourceLib.getSourceRef(cid, props.source || sourceId);\n\n\t\tuseDisposableLayer(props.layerId!, ci);\n\n\t\twatch([ isLoaded, sourceRef ], ([ il, src ]) => {\n\t\t\tif (il && (src || src === undefined)) {\n\t\t\t\tmap.value!.addLayer(LayerLib.genLayerOpts<HeatmapLayerSpecification>(props.layerId!, 'heatmap', props, sourceId), props.before || undefined);\n\t\t\t\tLayerLib.registerLayerEvents(map.value!, props.layerId!, ci.vnode);\n\t\t\t}\n\t\t}, { immediate: true });\n\n\t\treturn () => createCommentVNode('Heatmap Layer');\n\n\t}\n});\n","import { HillshadeLayerSpecification } from 'maplibre-gl';\nimport { createCommentVNode, defineComponent, getCurrentInstance, inject, PropType, warn, watch } from 'vue';\nimport { componentIdSymbol, isLoadedSymbol, mapSymbol, sourceIdSymbol } from '@/lib/types';\nimport { LayerLib } from '@/lib/lib/layer.lib';\nimport { SourceLib } from '@/lib/lib/source.lib';\nimport { useDisposableLayer } from '@/lib/composable/useDisposableLayer';\n\nexport default /*#__PURE__*/ defineComponent({\n\tname : 'MglHillshadeLayer',\n\tprops: {\n\t\t...LayerLib.SHARED.props,\n\t\tlayout: Object as PropType<HillshadeLayerSpecification['layout']>,\n\t\tpaint : Object as PropType<HillshadeLayerSpecification['paint']>\n\t},\n\temits: [ ...LayerLib.SHARED.emits ],\n\tsetup(props) {\n\n\t\tconst sourceId = inject(sourceIdSymbol);\n\n\t\tif (!sourceId && !props.source) {\n\t\t\twarn('Hillshade Layer: layer must be used inside source tag or source prop must be set');\n\t\t\treturn;\n\t\t}\n\n\t\tconst ci        = getCurrentInstance()!,\n\t\t\t  map       = inject(mapSymbol)!,\n\t\t\t  isLoaded  = inject(isLoadedSymbol)!,\n\t\t\t  cid       = inject(componentIdSymbol)!,\n\t\t\t  sourceRef = SourceLib.getSourceRef(cid, props.source || sourceId);\n\n\t\tuseDisposableLayer(props.layerId!, ci);\n\n\t\twatch([ isLoaded, sourceRef ], ([ il, src ]) => {\n\t\t\tif (il && (src || src === undefined)) {\n\t\t\t\tmap.value!.addLayer(LayerLib.genLayerOpts<HillshadeLayerSpecification>(props.layerId!, 'hillshade', props, sourceId), props.before || undefined);\n\t\t\t\tLayerLib.registerLayerEvents(map.value!, props.layerId!, ci.vnode);\n\t\t\t}\n\t\t}, { immediate: true });\n\n\t\treturn () => createCommentVNode('Hillshade Layer');\n\n\t}\n});\n","import { LineLayerSpecification } from 'maplibre-gl';\nimport { createCommentVNode, defineComponent, getCurrentInstance, inject, PropType, warn, watch } from 'vue';\nimport { componentIdSymbol, isLoadedSymbol, mapSymbol, sourceIdSymbol } from '@/lib/types';\nimport { LayerLib } from '@/lib/lib/layer.lib';\nimport { SourceLib } from '@/lib/lib/source.lib';\nimport { useDisposableLayer } from '@/lib/composable/useDisposableLayer';\n\nexport default /*#__PURE__*/ defineComponent({\n\tname : 'MglLineLayer',\n\tprops: {\n\t\t...LayerLib.SHARED.props,\n\t\tlayout: Object as PropType<LineLayerSpecification['layout']>,\n\t\tpaint : Object as PropType<LineLayerSpecification['paint']>\n\t},\n\temits: [ ...LayerLib.SHARED.emits ],\n\tsetup(props) {\n\n\t\tconst sourceId = inject(sourceIdSymbol);\n\n\t\tif (!sourceId && !props.source) {\n\t\t\twarn('Line Layer: layer must be used inside source tag or source prop must be set');\n\t\t\treturn;\n\t\t}\n\n\t\tconst ci        = getCurrentInstance()!,\n\t\t\t  map       = inject(mapSymbol)!,\n\t\t\t  isLoaded  = inject(isLoadedSymbol)!,\n\t\t\t  cid       = inject(componentIdSymbol)!,\n\t\t\t  sourceRef = SourceLib.getSourceRef(cid, props.source || sourceId);\n\n\t\tuseDisposableLayer(props.layerId!, ci);\n\n\t\twatch([ isLoaded, sourceRef ], ([ il, src ]) => {\n\t\t\tif (il && (src || src === undefined)) {\n\t\t\t\tmap.value!.addLayer(LayerLib.genLayerOpts<LineLayerSpecification>(props.layerId!, 'line', props, sourceId), props.before || undefined);\n\t\t\t\tLayerLib.registerLayerEvents(map.value!, props.layerId!, ci.vnode);\n\t\t\t}\n\t\t}, { immediate: true });\n\n\t\treturn () => createCommentVNode('Line Layer');\n\n\t}\n});\n","import { RasterLayerSpecification } from 'maplibre-gl';\nimport { createCommentVNode, defineComponent, getCurrentInstance, inject, PropType, warn, watch } from 'vue';\nimport { componentIdSymbol, isLoadedSymbol, mapSymbol, sourceIdSymbol } from '@/lib/types';\nimport { LayerLib } from '@/lib/lib/layer.lib';\nimport { SourceLib } from '@/lib/lib/source.lib';\nimport { useDisposableLayer } from '@/lib/composable/useDisposableLayer';\n\nexport default /*#__PURE__*/ defineComponent({\n\tname : 'MglRasterLayer',\n\tprops: {\n\t\t...LayerLib.SHARED.props,\n\t\tlayout: Object as PropType<RasterLayerSpecification['layout']>,\n\t\tpaint : Object as PropType<RasterLayerSpecification['paint']>\n\t},\n\temits: [ ...LayerLib.SHARED.emits ],\n\tsetup(props) {\n\n\t\tconst sourceId = inject(sourceIdSymbol);\n\n\t\tif (!sourceId && !props.source) {\n\t\t\twarn('Raster Layer: layer must be used inside source tag or source prop must be set');\n\t\t\treturn;\n\t\t}\n\n\t\tconst ci        = getCurrentInstance()!,\n\t\t\t  map       = inject(mapSymbol)!,\n\t\t\t  isLoaded  = inject(isLoadedSymbol)!,\n\t\t\t  cid       = inject(componentIdSymbol)!,\n\t\t\t  sourceRef = SourceLib.getSourceRef(cid, props.source || sourceId);\n\n\t\tuseDisposableLayer(props.layerId!, ci);\n\n\t\twatch([ isLoaded, sourceRef ], ([ il, src ]) => {\n\t\t\tif (il && (src || src === undefined)) {\n\t\t\t\tmap.value!.addLayer(LayerLib.genLayerOpts<RasterLayerSpecification>(props.layerId!, 'raster', props, sourceId), props.before || undefined);\n\t\t\t\tLayerLib.registerLayerEvents(map.value!, props.layerId!, ci.vnode);\n\t\t\t}\n\t\t}, { immediate: true });\n\n\t\treturn () => createCommentVNode('Raster Layer');\n\n\t}\n});\n","import { SymbolLayerSpecification } from 'maplibre-gl';\nimport { createCommentVNode, defineComponent, getCurrentInstance, inject, PropType, warn, watch } from 'vue';\nimport { componentIdSymbol, isLoadedSymbol, mapSymbol, sourceIdSymbol } from '@/lib/types';\nimport { LayerLib } from '@/lib/lib/layer.lib';\nimport { SourceLib } from '@/lib/lib/source.lib';\nimport { useDisposableLayer } from '@/lib/composable/useDisposableLayer';\n\nexport default /*#__PURE__*/ defineComponent({\n\tname : 'MglSymbolLayer',\n\tprops: {\n\t\t...LayerLib.SHARED.props,\n\t\tlayout: Object as PropType<SymbolLayerSpecification['layout']>,\n\t\tpaint : Object as PropType<SymbolLayerSpecification['paint']>\n\t},\n\temits: [ ...LayerLib.SHARED.emits ],\n\tsetup(props) {\n\n\t\tconst sourceId = inject(sourceIdSymbol);\n\n\t\tif (!sourceId && !props.source) {\n\t\t\twarn('Symbol Layer: layer must be used inside source tag or source prop must be set');\n\t\t\treturn;\n\t\t}\n\n\t\tconst ci        = getCurrentInstance()!,\n\t\t\t  map       = inject(mapSymbol)!,\n\t\t\t  isLoaded  = inject(isLoadedSymbol)!,\n\t\t\t  cid       = inject(componentIdSymbol)!,\n\t\t\t  sourceRef = SourceLib.getSourceRef(cid, props.source || sourceId);\n\n\t\tuseDisposableLayer(props.layerId!, ci);\n\n\t\twatch([ isLoaded, sourceRef ], ([ il, src ]) => {\n\t\t\tif (il && (src || src === undefined)) {\n\t\t\t\tmap.value!.addLayer(LayerLib.genLayerOpts<SymbolLayerSpecification>(props.layerId!, 'symbol', props, sourceId), props.before || undefined);\n\t\t\t\tLayerLib.registerLayerEvents(map.value!, props.layerId!, ci.vnode);\n\t\t\t}\n\t\t}, { immediate: true });\n\n\t\treturn () => createCommentVNode('Symbol Layer');\n\n\t}\n});\n","import { App, Plugin } from 'vue';\nimport '@/lib/css/maplibre.scss';\n\n// Import vue components\nimport * as components from '@/lib/components';\n\n// install function executed by Vue.use()\nconst install: Exclude<Plugin['install'], undefined> = function installVueMaplibreGl(app: App) {\n\tObject.entries(components).forEach(([ componentName, component ]) => {\n\t\tapp.component(componentName, component);\n\t});\n};\n\n// Create module definition for Vue.use()\nexport default install;\n\n// To allow individual component use, export components\n// each can be registered via Vue.component()\nexport * from '@/lib/components';\n\n// addition exports\nexport * from '@/lib/types';\nexport { useMap } from '@/lib/lib/mapRegistry';\nexport { defaults as MglDefaults } from '@/lib/defaults';\nexport { Position } from '@/lib/components/controls/position.enum';\nexport { usePositionWatcher } from '@/lib/composable/usePositionWatcher';\nexport { useSource } from '@/lib/composable/useSource';\nexport { useDisposableLayer } from '@/lib/composable/useDisposableLayer';\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}